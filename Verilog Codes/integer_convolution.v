// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="integer_convolution,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.711500,HLS_SYN_LAT=32821,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1898,HLS_SYN_LUT=9192,HLS_VERSION=2019_1}" *)

module integer_convolution (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        axi_input_V_V_TDATA,
        axi_input_V_V_TVALID,
        axi_input_V_V_TREADY,
        axi_output_V_V_TDATA,
        axi_output_V_V_TVALID,
        axi_output_V_V_TREADY,
        weight_input_V_V_TDATA,
        weight_input_V_V_TVALID,
        weight_input_V_V_TREADY,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_pp0_stage0 = 37'd16;
parameter    ap_ST_fsm_pp0_stage1 = 37'd32;
parameter    ap_ST_fsm_pp0_stage2 = 37'd64;
parameter    ap_ST_fsm_pp0_stage3 = 37'd128;
parameter    ap_ST_fsm_pp0_stage4 = 37'd256;
parameter    ap_ST_fsm_pp0_stage5 = 37'd512;
parameter    ap_ST_fsm_pp0_stage6 = 37'd1024;
parameter    ap_ST_fsm_pp0_stage7 = 37'd2048;
parameter    ap_ST_fsm_pp0_stage8 = 37'd4096;
parameter    ap_ST_fsm_pp0_stage9 = 37'd8192;
parameter    ap_ST_fsm_pp0_stage10 = 37'd16384;
parameter    ap_ST_fsm_pp0_stage11 = 37'd32768;
parameter    ap_ST_fsm_pp0_stage12 = 37'd65536;
parameter    ap_ST_fsm_pp0_stage13 = 37'd131072;
parameter    ap_ST_fsm_pp0_stage14 = 37'd262144;
parameter    ap_ST_fsm_pp0_stage15 = 37'd524288;
parameter    ap_ST_fsm_pp0_stage16 = 37'd1048576;
parameter    ap_ST_fsm_pp0_stage17 = 37'd2097152;
parameter    ap_ST_fsm_pp0_stage18 = 37'd4194304;
parameter    ap_ST_fsm_pp0_stage19 = 37'd8388608;
parameter    ap_ST_fsm_pp0_stage20 = 37'd16777216;
parameter    ap_ST_fsm_pp0_stage21 = 37'd33554432;
parameter    ap_ST_fsm_pp0_stage22 = 37'd67108864;
parameter    ap_ST_fsm_pp0_stage23 = 37'd134217728;
parameter    ap_ST_fsm_pp0_stage24 = 37'd268435456;
parameter    ap_ST_fsm_pp0_stage25 = 37'd536870912;
parameter    ap_ST_fsm_pp0_stage26 = 37'd1073741824;
parameter    ap_ST_fsm_pp0_stage27 = 37'd2147483648;
parameter    ap_ST_fsm_pp0_stage28 = 37'd4294967296;
parameter    ap_ST_fsm_pp0_stage29 = 37'd8589934592;
parameter    ap_ST_fsm_pp0_stage30 = 37'd17179869184;
parameter    ap_ST_fsm_pp0_stage31 = 37'd34359738368;
parameter    ap_ST_fsm_state40 = 37'd68719476736;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] axi_input_V_V_TDATA;
input   axi_input_V_V_TVALID;
output   axi_input_V_V_TREADY;
output  [31:0] axi_output_V_V_TDATA;
output   axi_output_V_V_TVALID;
input   axi_output_V_V_TREADY;
input  [63:0] weight_input_V_V_TDATA;
input   weight_input_V_V_TVALID;
output   weight_input_V_V_TREADY;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] axi_input_V_V_0_data_out;
wire    axi_input_V_V_0_vld_in;
wire    axi_input_V_V_0_vld_out;
wire    axi_input_V_V_0_ack_in;
reg    axi_input_V_V_0_ack_out;
reg   [15:0] axi_input_V_V_0_payload_A;
reg   [15:0] axi_input_V_V_0_payload_B;
reg    axi_input_V_V_0_sel_rd;
reg    axi_input_V_V_0_sel_wr;
wire    axi_input_V_V_0_sel;
wire    axi_input_V_V_0_load_A;
wire    axi_input_V_V_0_load_B;
reg   [1:0] axi_input_V_V_0_state;
wire    axi_input_V_V_0_state_cmp_full;
reg   [31:0] axi_output_V_V_1_data_out;
reg    axi_output_V_V_1_vld_in;
wire    axi_output_V_V_1_vld_out;
wire    axi_output_V_V_1_ack_in;
wire    axi_output_V_V_1_ack_out;
reg   [31:0] axi_output_V_V_1_payload_A;
reg   [31:0] axi_output_V_V_1_payload_B;
reg    axi_output_V_V_1_sel_rd;
reg    axi_output_V_V_1_sel_wr;
wire    axi_output_V_V_1_sel;
wire    axi_output_V_V_1_load_A;
wire    axi_output_V_V_1_load_B;
reg   [1:0] axi_output_V_V_1_state;
wire    axi_output_V_V_1_state_cmp_full;
wire   [0:0] interrupt_flag_V;
reg   [63:0] weight_input_V_V_0_data_out;
wire    weight_input_V_V_0_vld_in;
wire    weight_input_V_V_0_vld_out;
wire    weight_input_V_V_0_ack_in;
reg    weight_input_V_V_0_ack_out;
reg   [63:0] weight_input_V_V_0_payload_A;
reg   [63:0] weight_input_V_V_0_payload_B;
reg    weight_input_V_V_0_sel_rd;
reg    weight_input_V_V_0_sel_wr;
wire    weight_input_V_V_0_sel;
wire    weight_input_V_V_0_load_A;
wire    weight_input_V_V_0_load_B;
reg   [1:0] weight_input_V_V_0_state;
wire    weight_input_V_V_0_state_cmp_full;
reg   [4:0] FILTER_WEIGHT_V_address0;
reg    FILTER_WEIGHT_V_ce0;
reg    FILTER_WEIGHT_V_we0;
wire   [8:0] FILTER_WEIGHT_V_d0;
wire   [8:0] FILTER_WEIGHT_V_q0;
reg   [12:0] LIMIT_V_0;
reg   [12:0] LIMIT_V_1;
reg   [12:0] LIMIT_V_2;
reg   [12:0] LIMIT_V_3;
reg   [12:0] LIMIT_V_4;
reg   [12:0] LIMIT_V_5;
reg   [12:0] LIMIT_V_6;
reg   [12:0] LIMIT_V_7;
reg   [12:0] LIMIT_V_8;
reg   [12:0] LIMIT_V_9;
reg   [12:0] LIMIT_V_10;
reg   [12:0] LIMIT_V_11;
reg   [12:0] LIMIT_V_12;
reg   [12:0] LIMIT_V_13;
reg   [12:0] LIMIT_V_14;
reg   [12:0] LIMIT_V_15;
reg   [12:0] LIMIT_V_16;
reg   [12:0] LIMIT_V_17;
reg   [12:0] LIMIT_V_18;
reg   [12:0] LIMIT_V_19;
reg   [12:0] LIMIT_V_20;
reg   [12:0] LIMIT_V_21;
reg   [12:0] LIMIT_V_22;
reg   [12:0] LIMIT_V_23;
reg   [12:0] LIMIT_V_24;
reg   [12:0] LIMIT_V_25;
reg   [12:0] LIMIT_V_26;
reg   [12:0] LIMIT_V_27;
reg   [12:0] LIMIT_V_28;
reg   [12:0] LIMIT_V_29;
reg   [12:0] LIMIT_V_30;
reg   [12:0] LIMIT_V_31;
reg   [12:0] WIN_V_0_1;
reg   [12:0] WIN_V_0_2;
reg   [12:0] WIN_V_1_1;
reg   [12:0] WIN_V_1_2;
reg   [12:0] WIN_V_2_1;
reg   [12:0] WIN_V_2_2;
reg   [4:0] LB_V_0_address0;
reg    LB_V_0_ce0;
reg    LB_V_0_we0;
wire   [12:0] LB_V_0_q0;
reg   [4:0] LB_V_1_address0;
reg    LB_V_1_ce0;
reg    LB_V_1_we0;
wire   [12:0] LB_V_1_d0;
wire   [12:0] LB_V_1_q0;
reg    axi_input_V_V_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln75_reg_5279;
reg    axi_output_V_V_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] and_ln168_reg_5827;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] and_ln168_reg_5827_pp0_iter1_reg;
reg    weight_input_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
reg   [0:0] interrupt_flag_V_rea_reg_5256;
wire   [0:0] icmp_ln64_fu_753_p2;
wire    ap_CS_fsm_state3;
reg   [10:0] indvar_flatten_reg_418;
reg   [5:0] r_0_reg_429;
reg   [5:0] bvh_d_index_reg_440;
reg   [12:0] UnifiedRetVal_i_reg_451;
reg   [12:0] UnifiedRetVal_i69_reg_521;
wire   [12:0] grp_fu_689_p3;
reg   [12:0] reg_739;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state21_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state22_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state23_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state24_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state25_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state26_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state27_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state28_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state29_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_state30_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state31_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_state32_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_11001;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state33_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_11001;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_state34_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state35_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state36_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_11001;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state37_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [12:0] grp_fu_731_p3;
reg   [12:0] reg_743;
wire   [0:0] interrupt_flag_V_rea_read_fu_310_p2;
reg    ap_predicate_op60_read_state2;
reg    ap_block_state2;
wire   [5:0] f_fu_759_p2;
reg   [5:0] f_reg_5264;
wire   [4:0] trunc_ln203_fu_775_p1;
reg   [4:0] trunc_ln203_reg_5269;
wire   [0:0] icmp_ln75_fu_983_p2;
wire   [10:0] add_ln75_fu_989_p2;
reg   [10:0] add_ln75_reg_5283;
wire   [5:0] select_ln168_fu_1001_p3;
reg   [5:0] select_ln168_reg_5288;
reg   [5:0] select_ln168_reg_5288_pp0_iter1_reg;
wire   [0:0] select_ln168_1_fu_1047_p3;
reg   [0:0] select_ln168_1_reg_5295;
wire   [5:0] select_ln75_fu_1055_p3;
reg   [5:0] select_ln75_reg_5300;
reg   [4:0] LB_V_0_addr_reg_5305;
reg   [4:0] LB_V_1_addr_reg_5310;
wire   [4:0] trunc_ln1496_fu_1069_p1;
reg   [12:0] LB_V_0_load_reg_5639;
reg    ap_block_state6_pp0_stage1_iter0;
wire    ap_block_state38_pp0_stage1_iter1;
reg    ap_block_state38_io;
reg    ap_block_pp0_stage1_11001;
reg   [12:0] LB_V_1_load_reg_5708;
wire   [12:0] tmp_V_3_fu_1329_p1;
reg   [12:0] tmp_V_3_reg_5745;
wire   [0:0] trunc_ln791_fu_1334_p1;
reg   [0:0] trunc_ln791_reg_5782;
wire   [0:0] grp_fu_591_p3;
reg   [0:0] tmp_3_reg_5787;
wire   [0:0] grp_fu_599_p3;
reg   [0:0] tmp_4_reg_5792;
wire   [0:0] grp_fu_607_p3;
reg   [0:0] tmp_5_reg_5797;
wire   [0:0] grp_fu_615_p3;
reg   [0:0] tmp_6_reg_5802;
wire   [0:0] grp_fu_623_p3;
reg   [0:0] tmp_7_reg_5807;
wire   [0:0] grp_fu_631_p3;
reg   [0:0] tmp_8_reg_5812;
wire   [0:0] grp_fu_639_p3;
reg   [0:0] tmp_9_reg_5817;
wire   [0:0] grp_fu_647_p3;
reg   [0:0] tmp_10_reg_5822;
wire   [0:0] and_ln168_fu_1353_p2;
wire   [0:0] trunc_ln791_1_fu_1358_p1;
reg   [0:0] trunc_ln791_1_reg_5831;
wire    ap_block_state7_pp0_stage2_iter0;
wire    ap_block_state39_pp0_stage2_iter1;
reg    ap_block_state39_io;
reg    ap_block_pp0_stage2_11001;
reg   [0:0] tmp_12_reg_5836;
reg   [0:0] tmp_13_reg_5841;
reg   [0:0] tmp_14_reg_5846;
reg   [0:0] tmp_15_reg_5851;
reg   [0:0] tmp_16_reg_5856;
reg   [0:0] tmp_17_reg_5861;
reg   [0:0] tmp_18_reg_5866;
reg   [0:0] tmp_19_reg_5871;
wire   [0:0] trunc_ln791_2_fu_1362_p1;
reg   [0:0] trunc_ln791_2_reg_5876;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state8_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] tmp_21_reg_5881;
reg   [0:0] tmp_22_reg_5886;
reg   [0:0] tmp_23_reg_5891;
reg   [0:0] tmp_24_reg_5896;
reg   [0:0] tmp_25_reg_5901;
reg   [0:0] tmp_26_reg_5906;
reg   [0:0] tmp_27_reg_5911;
reg   [0:0] tmp_28_reg_5916;
wire   [0:0] trunc_ln791_3_fu_1366_p1;
reg   [0:0] trunc_ln791_3_reg_5921;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state9_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] tmp_30_reg_5926;
reg   [0:0] tmp_31_reg_5931;
reg   [0:0] tmp_32_reg_5936;
reg   [0:0] tmp_33_reg_5941;
reg   [0:0] tmp_34_reg_5946;
reg   [0:0] tmp_35_reg_5951;
reg   [0:0] tmp_36_reg_5956;
reg   [0:0] tmp_37_reg_5961;
wire   [0:0] trunc_ln791_4_fu_1370_p1;
reg   [0:0] trunc_ln791_4_reg_5966;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state10_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] tmp_39_reg_5971;
reg   [0:0] tmp_40_reg_5976;
reg   [0:0] tmp_41_reg_5981;
reg   [0:0] tmp_42_reg_5986;
reg   [0:0] tmp_43_reg_5991;
reg   [0:0] tmp_44_reg_5996;
reg   [0:0] tmp_45_reg_6001;
reg   [0:0] tmp_46_reg_6006;
wire   [0:0] trunc_ln791_5_fu_1374_p1;
reg   [0:0] trunc_ln791_5_reg_6011;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state11_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] tmp_48_reg_6016;
reg   [0:0] tmp_49_reg_6021;
reg   [0:0] tmp_50_reg_6026;
reg   [0:0] tmp_51_reg_6031;
reg   [0:0] tmp_52_reg_6036;
reg   [0:0] tmp_53_reg_6041;
reg   [0:0] tmp_54_reg_6046;
reg   [0:0] tmp_55_reg_6051;
wire   [0:0] trunc_ln791_6_fu_1378_p1;
reg   [0:0] trunc_ln791_6_reg_6056;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state12_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] tmp_57_reg_6061;
reg   [0:0] tmp_58_reg_6066;
reg   [0:0] tmp_59_reg_6071;
reg   [0:0] tmp_60_reg_6076;
reg   [0:0] tmp_61_reg_6081;
reg   [0:0] tmp_62_reg_6086;
reg   [0:0] tmp_63_reg_6091;
reg   [0:0] tmp_64_reg_6096;
wire   [0:0] trunc_ln791_7_fu_1382_p1;
reg   [0:0] trunc_ln791_7_reg_6101;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state13_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [0:0] tmp_66_reg_6106;
reg   [0:0] tmp_67_reg_6111;
reg   [0:0] tmp_68_reg_6116;
reg   [0:0] tmp_69_reg_6121;
reg   [0:0] tmp_70_reg_6126;
reg   [0:0] tmp_71_reg_6131;
reg   [0:0] tmp_72_reg_6136;
reg   [0:0] tmp_73_reg_6141;
wire   [0:0] trunc_ln791_8_fu_1386_p1;
reg   [0:0] trunc_ln791_8_reg_6146;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state14_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [0:0] tmp_75_reg_6151;
reg   [0:0] tmp_76_reg_6156;
reg   [0:0] tmp_77_reg_6161;
reg   [0:0] tmp_78_reg_6166;
reg   [0:0] tmp_79_reg_6171;
reg   [0:0] tmp_80_reg_6176;
reg   [0:0] tmp_81_reg_6181;
reg   [0:0] tmp_82_reg_6186;
wire   [0:0] trunc_ln791_9_fu_1390_p1;
reg   [0:0] trunc_ln791_9_reg_6191;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state15_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg   [0:0] tmp_84_reg_6196;
reg   [0:0] tmp_85_reg_6201;
reg   [0:0] tmp_86_reg_6206;
reg   [0:0] tmp_87_reg_6211;
reg   [0:0] tmp_88_reg_6216;
reg   [0:0] tmp_89_reg_6221;
reg   [0:0] tmp_90_reg_6226;
reg   [0:0] tmp_91_reg_6231;
wire   [0:0] trunc_ln791_10_fu_1394_p1;
reg   [0:0] trunc_ln791_10_reg_6236;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state16_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
reg   [0:0] tmp_93_reg_6241;
reg   [0:0] tmp_94_reg_6246;
reg   [0:0] tmp_95_reg_6251;
reg   [0:0] tmp_96_reg_6256;
reg   [0:0] tmp_97_reg_6261;
reg   [0:0] tmp_98_reg_6266;
reg   [0:0] tmp_99_reg_6271;
reg   [0:0] tmp_100_reg_6276;
wire   [0:0] trunc_ln791_11_fu_1398_p1;
reg   [0:0] trunc_ln791_11_reg_6281;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state17_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
reg   [0:0] tmp_102_reg_6286;
reg   [0:0] tmp_103_reg_6291;
reg   [0:0] tmp_104_reg_6296;
reg   [0:0] tmp_105_reg_6301;
reg   [0:0] tmp_106_reg_6306;
reg   [0:0] tmp_107_reg_6311;
reg   [0:0] tmp_108_reg_6316;
reg   [0:0] tmp_109_reg_6321;
wire   [0:0] trunc_ln791_12_fu_1402_p1;
reg   [0:0] trunc_ln791_12_reg_6326;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state18_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
reg   [0:0] tmp_111_reg_6331;
reg   [0:0] tmp_112_reg_6336;
reg   [0:0] tmp_113_reg_6341;
reg   [0:0] tmp_114_reg_6346;
reg   [0:0] tmp_115_reg_6351;
reg   [0:0] tmp_116_reg_6356;
reg   [0:0] tmp_117_reg_6361;
reg   [0:0] tmp_118_reg_6366;
wire   [0:0] trunc_ln791_13_fu_1406_p1;
reg   [0:0] trunc_ln791_13_reg_6371;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state19_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg   [0:0] tmp_120_reg_6376;
reg   [0:0] tmp_121_reg_6381;
reg   [0:0] tmp_122_reg_6386;
reg   [0:0] tmp_123_reg_6391;
reg   [0:0] tmp_124_reg_6396;
reg   [0:0] tmp_125_reg_6401;
reg   [0:0] tmp_126_reg_6406;
reg   [0:0] tmp_127_reg_6411;
wire   [0:0] trunc_ln791_14_fu_1410_p1;
reg   [0:0] trunc_ln791_14_reg_6416;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state20_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
reg   [0:0] tmp_129_reg_6421;
reg   [0:0] tmp_130_reg_6426;
reg   [0:0] tmp_131_reg_6431;
reg   [0:0] tmp_132_reg_6436;
reg   [0:0] tmp_133_reg_6441;
reg   [0:0] tmp_134_reg_6446;
reg   [0:0] tmp_135_reg_6451;
reg   [0:0] tmp_136_reg_6456;
reg   [12:0] WIN_V_0_1_load_reg_6461;
reg   [12:0] WIN_V_0_2_load_reg_6481;
reg   [12:0] WIN_V_1_1_load_reg_6517;
reg   [12:0] WIN_V_1_2_load_reg_6522;
reg   [12:0] WIN_V_2_1_load_reg_6528;
reg   [12:0] WIN_V_2_2_load_reg_6533;
wire   [12:0] sub_ln703_fu_1477_p2;
reg   [12:0] sub_ln703_reg_6539;
wire   [12:0] select_ln19_2_fu_1519_p3;
reg   [12:0] select_ln19_2_reg_6559;
wire   [12:0] sub_ln703_3_fu_1526_p2;
reg   [12:0] sub_ln703_3_reg_6564;
wire   [12:0] select_ln19_5_fu_1569_p3;
reg   [12:0] select_ln19_5_reg_6569;
wire   [12:0] sub_ln703_6_fu_1576_p2;
reg   [12:0] sub_ln703_6_reg_6574;
wire   [12:0] select_ln19_8_fu_1619_p3;
reg   [12:0] select_ln19_8_reg_6579;
wire   [12:0] select_ln19_11_fu_1662_p3;
reg   [12:0] select_ln19_11_reg_6584;
wire   [12:0] select_ln19_14_fu_1705_p3;
reg   [12:0] select_ln19_14_reg_6589;
wire   [12:0] select_ln19_17_fu_1748_p3;
reg   [12:0] select_ln19_17_reg_6594;
wire   [12:0] select_ln19_20_fu_1791_p3;
reg   [12:0] select_ln19_20_reg_6599;
wire   [12:0] select_ln19_23_fu_1834_p3;
reg   [12:0] select_ln19_23_reg_6604;
wire   [12:0] select_ln19_26_fu_1877_p3;
reg   [12:0] select_ln19_26_reg_6609;
wire   [12:0] select_ln19_29_fu_1920_p3;
reg   [12:0] select_ln19_29_reg_6614;
wire   [12:0] select_ln19_32_fu_1963_p3;
reg   [12:0] select_ln19_32_reg_6619;
wire   [12:0] select_ln19_35_fu_2006_p3;
reg   [12:0] select_ln19_35_reg_6624;
wire   [12:0] select_ln19_38_fu_2049_p3;
reg   [12:0] select_ln19_38_reg_6629;
wire   [12:0] select_ln19_41_fu_2092_p3;
reg   [12:0] select_ln19_41_reg_6634;
wire   [12:0] select_ln19_44_fu_2135_p3;
reg   [12:0] select_ln19_44_reg_6639;
wire   [12:0] select_ln19_47_fu_2178_p3;
reg   [12:0] select_ln19_47_reg_6644;
wire   [12:0] select_ln19_50_fu_2221_p3;
reg   [12:0] select_ln19_50_reg_6649;
wire   [12:0] select_ln19_53_fu_2264_p3;
reg   [12:0] select_ln19_53_reg_6654;
wire   [12:0] select_ln19_56_fu_2307_p3;
reg   [12:0] select_ln19_56_reg_6659;
wire   [12:0] select_ln19_59_fu_2350_p3;
reg   [12:0] select_ln19_59_reg_6664;
wire   [12:0] select_ln19_62_fu_2393_p3;
reg   [12:0] select_ln19_62_reg_6669;
wire   [12:0] select_ln19_65_fu_2436_p3;
reg   [12:0] select_ln19_65_reg_6674;
wire   [12:0] select_ln19_68_fu_2479_p3;
reg   [12:0] select_ln19_68_reg_6679;
wire   [12:0] select_ln19_71_fu_2522_p3;
reg   [12:0] select_ln19_71_reg_6684;
wire   [12:0] select_ln19_74_fu_2565_p3;
reg   [12:0] select_ln19_74_reg_6689;
wire   [12:0] select_ln19_77_fu_2608_p3;
reg   [12:0] select_ln19_77_reg_6694;
wire   [12:0] select_ln19_80_fu_2651_p3;
reg   [12:0] select_ln19_80_reg_6699;
wire   [12:0] select_ln19_83_fu_2694_p3;
reg   [12:0] select_ln19_83_reg_6704;
wire   [12:0] select_ln19_86_fu_2737_p3;
reg   [12:0] select_ln19_86_reg_6709;
wire   [12:0] select_ln19_89_fu_2780_p3;
reg   [12:0] select_ln19_89_reg_6714;
wire   [12:0] select_ln19_92_fu_2823_p3;
reg   [12:0] select_ln19_92_reg_6719;
wire   [12:0] select_ln19_95_fu_2866_p3;
reg   [12:0] select_ln19_95_reg_6724;
wire   [12:0] select_ln19_98_fu_2909_p3;
reg   [12:0] select_ln19_98_reg_6729;
wire   [12:0] select_ln19_101_fu_2952_p3;
reg   [12:0] select_ln19_101_reg_6734;
wire   [12:0] select_ln19_104_fu_2995_p3;
reg   [12:0] select_ln19_104_reg_6739;
wire   [12:0] select_ln19_107_fu_3038_p3;
reg   [12:0] select_ln19_107_reg_6744;
wire   [12:0] select_ln19_110_fu_3081_p3;
reg   [12:0] select_ln19_110_reg_6749;
wire   [12:0] select_ln19_113_fu_3124_p3;
reg   [12:0] select_ln19_113_reg_6754;
wire   [12:0] select_ln19_116_fu_3167_p3;
reg   [12:0] select_ln19_116_reg_6759;
wire   [12:0] select_ln19_119_fu_3210_p3;
reg   [12:0] select_ln19_119_reg_6764;
wire   [12:0] select_ln19_122_fu_3253_p3;
reg   [12:0] select_ln19_122_reg_6769;
wire   [12:0] select_ln19_125_fu_3296_p3;
reg   [12:0] select_ln19_125_reg_6774;
wire   [12:0] select_ln19_128_fu_3339_p3;
reg   [12:0] select_ln19_128_reg_6779;
wire   [12:0] select_ln19_131_fu_3382_p3;
reg   [12:0] select_ln19_131_reg_6784;
wire   [12:0] select_ln19_134_fu_3425_p3;
reg   [12:0] select_ln19_134_reg_6789;
wire   [12:0] select_ln19_137_fu_3474_p3;
reg   [12:0] select_ln19_137_reg_6794;
wire   [0:0] xor_ln1496_fu_3497_p2;
reg   [0:0] xor_ln1496_reg_6799;
wire   [0:0] xor_ln1496_1_fu_3518_p2;
reg   [0:0] xor_ln1496_1_reg_6804;
wire   [0:0] xor_ln1496_2_fu_3539_p2;
reg   [0:0] xor_ln1496_2_reg_6809;
wire   [0:0] xor_ln1496_3_fu_3560_p2;
reg   [0:0] xor_ln1496_3_reg_6814;
wire   [0:0] xor_ln1496_4_fu_3581_p2;
reg   [0:0] xor_ln1496_4_reg_6819;
wire   [0:0] xor_ln1496_5_fu_3602_p2;
reg   [0:0] xor_ln1496_5_reg_6824;
wire   [0:0] xor_ln1496_6_fu_3623_p2;
reg   [0:0] xor_ln1496_6_reg_6829;
wire   [0:0] xor_ln1496_7_fu_3644_p2;
reg   [0:0] xor_ln1496_7_reg_6834;
wire   [0:0] xor_ln1496_8_fu_3665_p2;
reg   [0:0] xor_ln1496_8_reg_6839;
wire   [0:0] xor_ln1496_9_fu_3686_p2;
reg   [0:0] xor_ln1496_9_reg_6844;
wire   [0:0] xor_ln1496_10_fu_3707_p2;
reg   [0:0] xor_ln1496_10_reg_6849;
wire   [0:0] xor_ln1496_11_fu_3728_p2;
reg   [0:0] xor_ln1496_11_reg_6854;
wire   [0:0] xor_ln1496_12_fu_3749_p2;
reg   [0:0] xor_ln1496_12_reg_6859;
wire   [0:0] xor_ln1496_13_fu_3770_p2;
reg   [0:0] xor_ln1496_13_reg_6864;
wire   [0:0] xor_ln1496_14_fu_3791_p2;
reg   [0:0] xor_ln1496_14_reg_6869;
wire   [0:0] xor_ln1496_15_fu_3808_p2;
reg   [0:0] xor_ln1496_15_reg_6874;
wire   [12:0] select_ln19_146_fu_3852_p3;
reg   [12:0] select_ln19_146_reg_6879;
wire   [0:0] xor_ln1496_16_fu_3871_p2;
reg   [0:0] xor_ln1496_16_reg_6884;
wire   [12:0] select_ln19_155_fu_3915_p3;
reg   [12:0] select_ln19_155_reg_6889;
wire   [0:0] xor_ln1496_17_fu_3934_p2;
reg   [0:0] xor_ln1496_17_reg_6894;
wire   [12:0] select_ln19_164_fu_3978_p3;
reg   [12:0] select_ln19_164_reg_6899;
wire   [0:0] xor_ln1496_18_fu_3997_p2;
reg   [0:0] xor_ln1496_18_reg_6904;
wire   [12:0] select_ln19_173_fu_4041_p3;
reg   [12:0] select_ln19_173_reg_6909;
wire   [0:0] xor_ln1496_19_fu_4060_p2;
reg   [0:0] xor_ln1496_19_reg_6914;
wire   [12:0] select_ln19_182_fu_4104_p3;
reg   [12:0] select_ln19_182_reg_6919;
wire   [0:0] xor_ln1496_20_fu_4123_p2;
reg   [0:0] xor_ln1496_20_reg_6924;
wire   [12:0] select_ln19_191_fu_4167_p3;
reg   [12:0] select_ln19_191_reg_6929;
wire   [0:0] xor_ln1496_21_fu_4186_p2;
reg   [0:0] xor_ln1496_21_reg_6934;
wire   [12:0] select_ln19_200_fu_4230_p3;
reg   [12:0] select_ln19_200_reg_6939;
wire   [0:0] xor_ln1496_22_fu_4249_p2;
reg   [0:0] xor_ln1496_22_reg_6944;
wire   [12:0] select_ln19_209_fu_4293_p3;
reg   [12:0] select_ln19_209_reg_6949;
wire   [0:0] xor_ln1496_23_fu_4312_p2;
reg   [0:0] xor_ln1496_23_reg_6954;
wire   [12:0] select_ln19_218_fu_4356_p3;
reg   [12:0] select_ln19_218_reg_6959;
wire   [0:0] xor_ln1496_24_fu_4375_p2;
reg   [0:0] xor_ln1496_24_reg_6964;
wire   [12:0] select_ln19_227_fu_4419_p3;
reg   [12:0] select_ln19_227_reg_6969;
wire   [0:0] xor_ln1496_25_fu_4438_p2;
reg   [0:0] xor_ln1496_25_reg_6974;
wire   [12:0] select_ln19_236_fu_4482_p3;
reg   [12:0] select_ln19_236_reg_6979;
wire   [0:0] xor_ln1496_26_fu_4501_p2;
reg   [0:0] xor_ln1496_26_reg_6984;
wire   [12:0] select_ln19_245_fu_4545_p3;
reg   [12:0] select_ln19_245_reg_6989;
wire   [0:0] xor_ln1496_27_fu_4564_p2;
reg   [0:0] xor_ln1496_27_reg_6994;
wire   [12:0] select_ln19_254_fu_4608_p3;
reg   [12:0] select_ln19_254_reg_6999;
wire   [0:0] xor_ln1496_28_fu_4627_p2;
reg   [0:0] xor_ln1496_28_reg_7004;
wire   [12:0] select_ln19_263_fu_4671_p3;
reg   [12:0] select_ln19_263_reg_7009;
wire   [0:0] xor_ln1496_29_fu_4690_p2;
reg   [0:0] xor_ln1496_29_reg_7014;
wire   [12:0] select_ln19_272_fu_4734_p3;
reg   [12:0] select_ln19_272_reg_7019;
wire   [5:0] c_fu_4742_p2;
reg   [5:0] c_reg_7024;
wire   [0:0] xor_ln1496_30_fu_4758_p2;
reg   [0:0] xor_ln1496_30_reg_7029;
wire   [12:0] select_ln19_281_fu_4802_p3;
reg   [12:0] select_ln19_281_reg_7034;
reg   [31:0] tmp_V_4_fu_5240_p4;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
wire    ap_block_pp0_stage31_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [5:0] f_0_reg_407;
wire    ap_CS_fsm_state4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_422_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_r_0_phi_fu_433_p4;
reg   [5:0] ap_phi_mux_bvh_d_index_phi_fu_444_p4;
reg   [12:0] ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451;
reg   [12:0] ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521;
wire   [63:0] zext_ln66_fu_765_p1;
wire   [63:0] zext_ln141_fu_1063_p1;
wire   [12:0] shl_ln_fu_783_p3;
wire    ap_block_pp0_stage16;
reg   [31:0] tmp_V_2_fu_306;
reg    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage25;
wire    ap_block_pp0_stage26;
wire    ap_block_pp0_stage27;
wire    ap_block_pp0_stage28;
wire    ap_block_pp0_stage29;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage31;
reg   [12:0] grp_fu_655_p1;
reg   [12:0] grp_fu_655_p2;
wire   [12:0] grp_fu_655_p3;
reg   [12:0] grp_fu_661_p1;
reg   [12:0] grp_fu_666_p0;
wire   [12:0] grp_fu_666_p2;
wire   [12:0] grp_fu_661_p2;
wire   [12:0] grp_fu_671_p3;
wire   [12:0] grp_fu_684_p2;
wire   [12:0] grp_fu_679_p2;
reg   [12:0] grp_fu_697_p1;
reg   [12:0] grp_fu_697_p2;
wire   [12:0] grp_fu_697_p3;
reg   [12:0] grp_fu_703_p1;
reg   [12:0] grp_fu_708_p0;
wire   [12:0] grp_fu_708_p2;
wire   [12:0] grp_fu_703_p2;
wire   [12:0] grp_fu_713_p3;
wire   [12:0] grp_fu_726_p2;
wire   [12:0] grp_fu_721_p2;
wire   [4:0] trunc_ln731_fu_779_p1;
wire   [0:0] icmp_ln77_fu_995_p2;
wire   [5:0] add_ln75_1_fu_1009_p2;
wire   [4:0] tmp_1_fu_1015_p4;
wire   [4:0] tmp_2_fu_1031_p4;
wire   [0:0] icmp_ln168_fu_1025_p2;
wire   [0:0] icmp_ln168_1_fu_1041_p2;
wire   [4:0] tmp_291_fu_1338_p4;
wire   [0:0] icmp_ln168_2_fu_1347_p2;
wire   [12:0] select_ln19_fu_1483_p3;
wire   [12:0] add_ln703_fu_1496_p2;
wire   [12:0] sub_ln703_1_fu_1490_p2;
wire   [12:0] select_ln19_1_fu_1502_p3;
wire   [12:0] add_ln703_1_fu_1514_p2;
wire   [12:0] sub_ln703_2_fu_1509_p2;
wire   [12:0] select_ln19_3_fu_1533_p3;
wire   [12:0] add_ln703_2_fu_1546_p2;
wire   [12:0] sub_ln703_4_fu_1540_p2;
wire   [12:0] select_ln19_4_fu_1552_p3;
wire   [12:0] add_ln703_3_fu_1564_p2;
wire   [12:0] sub_ln703_5_fu_1559_p2;
wire   [12:0] select_ln19_6_fu_1583_p3;
wire   [12:0] add_ln703_4_fu_1596_p2;
wire   [12:0] sub_ln703_7_fu_1590_p2;
wire   [12:0] select_ln19_7_fu_1602_p3;
wire   [12:0] add_ln703_5_fu_1614_p2;
wire   [12:0] sub_ln703_8_fu_1609_p2;
wire   [12:0] select_ln19_9_fu_1626_p3;
wire   [12:0] add_ln703_8_fu_1639_p2;
wire   [12:0] sub_ln703_9_fu_1633_p2;
wire   [12:0] select_ln19_10_fu_1645_p3;
wire   [12:0] add_ln703_9_fu_1657_p2;
wire   [12:0] sub_ln703_10_fu_1652_p2;
wire   [12:0] select_ln19_12_fu_1669_p3;
wire   [12:0] add_ln703_10_fu_1682_p2;
wire   [12:0] sub_ln703_11_fu_1676_p2;
wire   [12:0] select_ln19_13_fu_1688_p3;
wire   [12:0] add_ln703_11_fu_1700_p2;
wire   [12:0] sub_ln703_12_fu_1695_p2;
wire   [12:0] select_ln19_15_fu_1712_p3;
wire   [12:0] add_ln703_12_fu_1725_p2;
wire   [12:0] sub_ln703_13_fu_1719_p2;
wire   [12:0] select_ln19_16_fu_1731_p3;
wire   [12:0] add_ln703_13_fu_1743_p2;
wire   [12:0] sub_ln703_14_fu_1738_p2;
wire   [12:0] select_ln19_18_fu_1755_p3;
wire   [12:0] add_ln703_16_fu_1768_p2;
wire   [12:0] sub_ln703_15_fu_1762_p2;
wire   [12:0] select_ln19_19_fu_1774_p3;
wire   [12:0] add_ln703_17_fu_1786_p2;
wire   [12:0] sub_ln703_16_fu_1781_p2;
wire   [12:0] select_ln19_21_fu_1798_p3;
wire   [12:0] add_ln703_18_fu_1811_p2;
wire   [12:0] sub_ln703_17_fu_1805_p2;
wire   [12:0] select_ln19_22_fu_1817_p3;
wire   [12:0] add_ln703_19_fu_1829_p2;
wire   [12:0] sub_ln703_18_fu_1824_p2;
wire   [12:0] select_ln19_24_fu_1841_p3;
wire   [12:0] add_ln703_20_fu_1854_p2;
wire   [12:0] sub_ln703_19_fu_1848_p2;
wire   [12:0] select_ln19_25_fu_1860_p3;
wire   [12:0] add_ln703_21_fu_1872_p2;
wire   [12:0] sub_ln703_20_fu_1867_p2;
wire   [12:0] select_ln19_27_fu_1884_p3;
wire   [12:0] add_ln703_24_fu_1897_p2;
wire   [12:0] sub_ln703_21_fu_1891_p2;
wire   [12:0] select_ln19_28_fu_1903_p3;
wire   [12:0] add_ln703_25_fu_1915_p2;
wire   [12:0] sub_ln703_22_fu_1910_p2;
wire   [12:0] select_ln19_30_fu_1927_p3;
wire   [12:0] add_ln703_26_fu_1940_p2;
wire   [12:0] sub_ln703_23_fu_1934_p2;
wire   [12:0] select_ln19_31_fu_1946_p3;
wire   [12:0] add_ln703_27_fu_1958_p2;
wire   [12:0] sub_ln703_24_fu_1953_p2;
wire   [12:0] select_ln19_33_fu_1970_p3;
wire   [12:0] add_ln703_28_fu_1983_p2;
wire   [12:0] sub_ln703_25_fu_1977_p2;
wire   [12:0] select_ln19_34_fu_1989_p3;
wire   [12:0] add_ln703_29_fu_2001_p2;
wire   [12:0] sub_ln703_26_fu_1996_p2;
wire   [12:0] select_ln19_36_fu_2013_p3;
wire   [12:0] add_ln703_32_fu_2026_p2;
wire   [12:0] sub_ln703_27_fu_2020_p2;
wire   [12:0] select_ln19_37_fu_2032_p3;
wire   [12:0] add_ln703_33_fu_2044_p2;
wire   [12:0] sub_ln703_28_fu_2039_p2;
wire   [12:0] select_ln19_39_fu_2056_p3;
wire   [12:0] add_ln703_34_fu_2069_p2;
wire   [12:0] sub_ln703_29_fu_2063_p2;
wire   [12:0] select_ln19_40_fu_2075_p3;
wire   [12:0] add_ln703_35_fu_2087_p2;
wire   [12:0] sub_ln703_30_fu_2082_p2;
wire   [12:0] select_ln19_42_fu_2099_p3;
wire   [12:0] add_ln703_36_fu_2112_p2;
wire   [12:0] sub_ln703_31_fu_2106_p2;
wire   [12:0] select_ln19_43_fu_2118_p3;
wire   [12:0] add_ln703_37_fu_2130_p2;
wire   [12:0] sub_ln703_32_fu_2125_p2;
wire   [12:0] select_ln19_45_fu_2142_p3;
wire   [12:0] add_ln703_40_fu_2155_p2;
wire   [12:0] sub_ln703_33_fu_2149_p2;
wire   [12:0] select_ln19_46_fu_2161_p3;
wire   [12:0] add_ln703_41_fu_2173_p2;
wire   [12:0] sub_ln703_34_fu_2168_p2;
wire   [12:0] select_ln19_48_fu_2185_p3;
wire   [12:0] add_ln703_42_fu_2198_p2;
wire   [12:0] sub_ln703_35_fu_2192_p2;
wire   [12:0] select_ln19_49_fu_2204_p3;
wire   [12:0] add_ln703_43_fu_2216_p2;
wire   [12:0] sub_ln703_36_fu_2211_p2;
wire   [12:0] select_ln19_51_fu_2228_p3;
wire   [12:0] add_ln703_44_fu_2241_p2;
wire   [12:0] sub_ln703_37_fu_2235_p2;
wire   [12:0] select_ln19_52_fu_2247_p3;
wire   [12:0] add_ln703_45_fu_2259_p2;
wire   [12:0] sub_ln703_38_fu_2254_p2;
wire   [12:0] select_ln19_54_fu_2271_p3;
wire   [12:0] add_ln703_48_fu_2284_p2;
wire   [12:0] sub_ln703_39_fu_2278_p2;
wire   [12:0] select_ln19_55_fu_2290_p3;
wire   [12:0] add_ln703_49_fu_2302_p2;
wire   [12:0] sub_ln703_40_fu_2297_p2;
wire   [12:0] select_ln19_57_fu_2314_p3;
wire   [12:0] add_ln703_50_fu_2327_p2;
wire   [12:0] sub_ln703_41_fu_2321_p2;
wire   [12:0] select_ln19_58_fu_2333_p3;
wire   [12:0] add_ln703_51_fu_2345_p2;
wire   [12:0] sub_ln703_42_fu_2340_p2;
wire   [12:0] select_ln19_60_fu_2357_p3;
wire   [12:0] add_ln703_52_fu_2370_p2;
wire   [12:0] sub_ln703_43_fu_2364_p2;
wire   [12:0] select_ln19_61_fu_2376_p3;
wire   [12:0] add_ln703_53_fu_2388_p2;
wire   [12:0] sub_ln703_44_fu_2383_p2;
wire   [12:0] select_ln19_63_fu_2400_p3;
wire   [12:0] add_ln703_56_fu_2413_p2;
wire   [12:0] sub_ln703_45_fu_2407_p2;
wire   [12:0] select_ln19_64_fu_2419_p3;
wire   [12:0] add_ln703_57_fu_2431_p2;
wire   [12:0] sub_ln703_46_fu_2426_p2;
wire   [12:0] select_ln19_66_fu_2443_p3;
wire   [12:0] add_ln703_58_fu_2456_p2;
wire   [12:0] sub_ln703_47_fu_2450_p2;
wire   [12:0] select_ln19_67_fu_2462_p3;
wire   [12:0] add_ln703_59_fu_2474_p2;
wire   [12:0] sub_ln703_48_fu_2469_p2;
wire   [12:0] select_ln19_69_fu_2486_p3;
wire   [12:0] add_ln703_60_fu_2499_p2;
wire   [12:0] sub_ln703_49_fu_2493_p2;
wire   [12:0] select_ln19_70_fu_2505_p3;
wire   [12:0] add_ln703_61_fu_2517_p2;
wire   [12:0] sub_ln703_50_fu_2512_p2;
wire   [12:0] select_ln19_72_fu_2529_p3;
wire   [12:0] add_ln703_64_fu_2542_p2;
wire   [12:0] sub_ln703_51_fu_2536_p2;
wire   [12:0] select_ln19_73_fu_2548_p3;
wire   [12:0] add_ln703_65_fu_2560_p2;
wire   [12:0] sub_ln703_52_fu_2555_p2;
wire   [12:0] select_ln19_75_fu_2572_p3;
wire   [12:0] add_ln703_66_fu_2585_p2;
wire   [12:0] sub_ln703_53_fu_2579_p2;
wire   [12:0] select_ln19_76_fu_2591_p3;
wire   [12:0] add_ln703_67_fu_2603_p2;
wire   [12:0] sub_ln703_54_fu_2598_p2;
wire   [12:0] select_ln19_78_fu_2615_p3;
wire   [12:0] add_ln703_68_fu_2628_p2;
wire   [12:0] sub_ln703_55_fu_2622_p2;
wire   [12:0] select_ln19_79_fu_2634_p3;
wire   [12:0] add_ln703_69_fu_2646_p2;
wire   [12:0] sub_ln703_56_fu_2641_p2;
wire   [12:0] select_ln19_81_fu_2658_p3;
wire   [12:0] add_ln703_72_fu_2671_p2;
wire   [12:0] sub_ln703_57_fu_2665_p2;
wire   [12:0] select_ln19_82_fu_2677_p3;
wire   [12:0] add_ln703_73_fu_2689_p2;
wire   [12:0] sub_ln703_58_fu_2684_p2;
wire   [12:0] select_ln19_84_fu_2701_p3;
wire   [12:0] add_ln703_74_fu_2714_p2;
wire   [12:0] sub_ln703_59_fu_2708_p2;
wire   [12:0] select_ln19_85_fu_2720_p3;
wire   [12:0] add_ln703_75_fu_2732_p2;
wire   [12:0] sub_ln703_60_fu_2727_p2;
wire   [12:0] select_ln19_87_fu_2744_p3;
wire   [12:0] add_ln703_76_fu_2757_p2;
wire   [12:0] sub_ln703_61_fu_2751_p2;
wire   [12:0] select_ln19_88_fu_2763_p3;
wire   [12:0] add_ln703_77_fu_2775_p2;
wire   [12:0] sub_ln703_62_fu_2770_p2;
wire   [12:0] select_ln19_90_fu_2787_p3;
wire   [12:0] add_ln703_80_fu_2800_p2;
wire   [12:0] sub_ln703_63_fu_2794_p2;
wire   [12:0] select_ln19_91_fu_2806_p3;
wire   [12:0] add_ln703_81_fu_2818_p2;
wire   [12:0] sub_ln703_64_fu_2813_p2;
wire   [12:0] select_ln19_93_fu_2830_p3;
wire   [12:0] add_ln703_82_fu_2843_p2;
wire   [12:0] sub_ln703_65_fu_2837_p2;
wire   [12:0] select_ln19_94_fu_2849_p3;
wire   [12:0] add_ln703_83_fu_2861_p2;
wire   [12:0] sub_ln703_66_fu_2856_p2;
wire   [12:0] select_ln19_96_fu_2873_p3;
wire   [12:0] add_ln703_84_fu_2886_p2;
wire   [12:0] sub_ln703_67_fu_2880_p2;
wire   [12:0] select_ln19_97_fu_2892_p3;
wire   [12:0] add_ln703_85_fu_2904_p2;
wire   [12:0] sub_ln703_68_fu_2899_p2;
wire   [12:0] select_ln19_99_fu_2916_p3;
wire   [12:0] add_ln703_88_fu_2929_p2;
wire   [12:0] sub_ln703_69_fu_2923_p2;
wire   [12:0] select_ln19_100_fu_2935_p3;
wire   [12:0] add_ln703_89_fu_2947_p2;
wire   [12:0] sub_ln703_70_fu_2942_p2;
wire   [12:0] select_ln19_102_fu_2959_p3;
wire   [12:0] add_ln703_90_fu_2972_p2;
wire   [12:0] sub_ln703_71_fu_2966_p2;
wire   [12:0] select_ln19_103_fu_2978_p3;
wire   [12:0] add_ln703_91_fu_2990_p2;
wire   [12:0] sub_ln703_72_fu_2985_p2;
wire   [12:0] select_ln19_105_fu_3002_p3;
wire   [12:0] add_ln703_92_fu_3015_p2;
wire   [12:0] sub_ln703_73_fu_3009_p2;
wire   [12:0] select_ln19_106_fu_3021_p3;
wire   [12:0] add_ln703_93_fu_3033_p2;
wire   [12:0] sub_ln703_74_fu_3028_p2;
wire   [12:0] select_ln19_108_fu_3045_p3;
wire   [12:0] add_ln703_96_fu_3058_p2;
wire   [12:0] sub_ln703_75_fu_3052_p2;
wire   [12:0] select_ln19_109_fu_3064_p3;
wire   [12:0] add_ln703_97_fu_3076_p2;
wire   [12:0] sub_ln703_76_fu_3071_p2;
wire   [12:0] select_ln19_111_fu_3088_p3;
wire   [12:0] add_ln703_98_fu_3101_p2;
wire   [12:0] sub_ln703_77_fu_3095_p2;
wire   [12:0] select_ln19_112_fu_3107_p3;
wire   [12:0] add_ln703_99_fu_3119_p2;
wire   [12:0] sub_ln703_78_fu_3114_p2;
wire   [12:0] select_ln19_114_fu_3131_p3;
wire   [12:0] add_ln703_100_fu_3144_p2;
wire   [12:0] sub_ln703_79_fu_3138_p2;
wire   [12:0] select_ln19_115_fu_3150_p3;
wire   [12:0] add_ln703_101_fu_3162_p2;
wire   [12:0] sub_ln703_80_fu_3157_p2;
wire   [12:0] select_ln19_117_fu_3174_p3;
wire   [12:0] add_ln703_104_fu_3187_p2;
wire   [12:0] sub_ln703_81_fu_3181_p2;
wire   [12:0] select_ln19_118_fu_3193_p3;
wire   [12:0] add_ln703_105_fu_3205_p2;
wire   [12:0] sub_ln703_82_fu_3200_p2;
wire   [12:0] select_ln19_120_fu_3217_p3;
wire   [12:0] add_ln703_106_fu_3230_p2;
wire   [12:0] sub_ln703_83_fu_3224_p2;
wire   [12:0] select_ln19_121_fu_3236_p3;
wire   [12:0] add_ln703_107_fu_3248_p2;
wire   [12:0] sub_ln703_84_fu_3243_p2;
wire   [12:0] select_ln19_123_fu_3260_p3;
wire   [12:0] add_ln703_108_fu_3273_p2;
wire   [12:0] sub_ln703_85_fu_3267_p2;
wire   [12:0] select_ln19_124_fu_3279_p3;
wire   [12:0] add_ln703_109_fu_3291_p2;
wire   [12:0] sub_ln703_86_fu_3286_p2;
wire   [12:0] select_ln19_126_fu_3303_p3;
wire   [12:0] add_ln703_112_fu_3316_p2;
wire   [12:0] sub_ln703_87_fu_3310_p2;
wire   [12:0] select_ln19_127_fu_3322_p3;
wire   [12:0] add_ln703_113_fu_3334_p2;
wire   [12:0] sub_ln703_88_fu_3329_p2;
wire   [12:0] select_ln19_129_fu_3346_p3;
wire   [12:0] add_ln703_114_fu_3359_p2;
wire   [12:0] sub_ln703_89_fu_3353_p2;
wire   [12:0] select_ln19_130_fu_3365_p3;
wire   [12:0] add_ln703_115_fu_3377_p2;
wire   [12:0] sub_ln703_90_fu_3372_p2;
wire   [12:0] select_ln19_132_fu_3389_p3;
wire   [12:0] add_ln703_116_fu_3402_p2;
wire   [12:0] sub_ln703_91_fu_3396_p2;
wire   [12:0] select_ln19_133_fu_3408_p3;
wire   [12:0] add_ln703_117_fu_3420_p2;
wire   [12:0] sub_ln703_92_fu_3415_p2;
wire   [0:0] trunc_ln791_15_fu_3432_p1;
wire   [12:0] select_ln19_135_fu_3436_p3;
wire   [12:0] add_ln703_120_fu_3450_p2;
wire   [12:0] sub_ln703_93_fu_3444_p2;
wire   [12:0] select_ln19_136_fu_3456_p3;
wire   [12:0] add_ln703_121_fu_3469_p2;
wire   [12:0] sub_ln703_94_fu_3464_p2;
wire   [12:0] add_ln703_6_fu_3482_p2;
wire   [12:0] add_ln703_7_fu_3486_p2;
wire   [0:0] icmp_ln1496_fu_3491_p2;
wire   [12:0] add_ln703_14_fu_3503_p2;
wire   [12:0] add_ln703_15_fu_3507_p2;
wire   [0:0] icmp_ln1496_1_fu_3512_p2;
wire   [12:0] add_ln703_22_fu_3524_p2;
wire   [12:0] add_ln703_23_fu_3528_p2;
wire   [0:0] icmp_ln1496_2_fu_3533_p2;
wire   [12:0] add_ln703_30_fu_3545_p2;
wire   [12:0] add_ln703_31_fu_3549_p2;
wire   [0:0] icmp_ln1496_3_fu_3554_p2;
wire   [12:0] add_ln703_38_fu_3566_p2;
wire   [12:0] add_ln703_39_fu_3570_p2;
wire   [0:0] icmp_ln1496_4_fu_3575_p2;
wire   [12:0] add_ln703_46_fu_3587_p2;
wire   [12:0] add_ln703_47_fu_3591_p2;
wire   [0:0] icmp_ln1496_5_fu_3596_p2;
wire   [12:0] add_ln703_54_fu_3608_p2;
wire   [12:0] add_ln703_55_fu_3612_p2;
wire   [0:0] icmp_ln1496_6_fu_3617_p2;
wire   [12:0] add_ln703_62_fu_3629_p2;
wire   [12:0] add_ln703_63_fu_3633_p2;
wire   [0:0] icmp_ln1496_7_fu_3638_p2;
wire   [12:0] add_ln703_70_fu_3650_p2;
wire   [12:0] add_ln703_71_fu_3654_p2;
wire   [0:0] icmp_ln1496_8_fu_3659_p2;
wire   [12:0] add_ln703_78_fu_3671_p2;
wire   [12:0] add_ln703_79_fu_3675_p2;
wire   [0:0] icmp_ln1496_9_fu_3680_p2;
wire   [12:0] add_ln703_86_fu_3692_p2;
wire   [12:0] add_ln703_87_fu_3696_p2;
wire   [0:0] icmp_ln1496_10_fu_3701_p2;
wire   [12:0] add_ln703_94_fu_3713_p2;
wire   [12:0] add_ln703_95_fu_3717_p2;
wire   [0:0] icmp_ln1496_11_fu_3722_p2;
wire   [12:0] add_ln703_102_fu_3734_p2;
wire   [12:0] add_ln703_103_fu_3738_p2;
wire   [0:0] icmp_ln1496_12_fu_3743_p2;
wire   [12:0] add_ln703_110_fu_3755_p2;
wire   [12:0] add_ln703_111_fu_3759_p2;
wire   [0:0] icmp_ln1496_13_fu_3764_p2;
wire   [12:0] add_ln703_118_fu_3776_p2;
wire   [12:0] add_ln703_119_fu_3780_p2;
wire   [0:0] icmp_ln1496_14_fu_3785_p2;
wire   [12:0] grp_fu_747_p2;
wire   [12:0] add_ln703_127_fu_3797_p2;
wire   [0:0] icmp_ln1496_15_fu_3802_p2;
wire   [0:0] trunc_ln791_16_fu_3814_p1;
wire   [12:0] select_ln19_144_fu_3818_p3;
wire   [12:0] add_ln703_128_fu_3829_p2;
wire   [12:0] sub_ln703_99_fu_3824_p2;
wire   [12:0] select_ln19_145_fu_3834_p3;
wire   [12:0] add_ln703_129_fu_3847_p2;
wire   [12:0] sub_ln703_100_fu_3842_p2;
wire   [12:0] add_ln703_135_fu_3860_p2;
wire   [0:0] icmp_ln1496_16_fu_3865_p2;
wire   [0:0] trunc_ln791_17_fu_3877_p1;
wire   [12:0] select_ln19_153_fu_3881_p3;
wire   [12:0] add_ln703_136_fu_3892_p2;
wire   [12:0] sub_ln703_105_fu_3887_p2;
wire   [12:0] select_ln19_154_fu_3897_p3;
wire   [12:0] add_ln703_137_fu_3910_p2;
wire   [12:0] sub_ln703_106_fu_3905_p2;
wire   [12:0] add_ln703_143_fu_3923_p2;
wire   [0:0] icmp_ln1496_17_fu_3928_p2;
wire   [0:0] trunc_ln791_18_fu_3940_p1;
wire   [12:0] select_ln19_162_fu_3944_p3;
wire   [12:0] add_ln703_144_fu_3955_p2;
wire   [12:0] sub_ln703_111_fu_3950_p2;
wire   [12:0] select_ln19_163_fu_3960_p3;
wire   [12:0] add_ln703_145_fu_3973_p2;
wire   [12:0] sub_ln703_112_fu_3968_p2;
wire   [12:0] add_ln703_151_fu_3986_p2;
wire   [0:0] icmp_ln1496_18_fu_3991_p2;
wire   [0:0] trunc_ln791_19_fu_4003_p1;
wire   [12:0] select_ln19_171_fu_4007_p3;
wire   [12:0] add_ln703_152_fu_4018_p2;
wire   [12:0] sub_ln703_117_fu_4013_p2;
wire   [12:0] select_ln19_172_fu_4023_p3;
wire   [12:0] add_ln703_153_fu_4036_p2;
wire   [12:0] sub_ln703_118_fu_4031_p2;
wire   [12:0] add_ln703_159_fu_4049_p2;
wire   [0:0] icmp_ln1496_19_fu_4054_p2;
wire   [0:0] trunc_ln791_20_fu_4066_p1;
wire   [12:0] select_ln19_180_fu_4070_p3;
wire   [12:0] add_ln703_160_fu_4081_p2;
wire   [12:0] sub_ln703_123_fu_4076_p2;
wire   [12:0] select_ln19_181_fu_4086_p3;
wire   [12:0] add_ln703_161_fu_4099_p2;
wire   [12:0] sub_ln703_124_fu_4094_p2;
wire   [12:0] add_ln703_167_fu_4112_p2;
wire   [0:0] icmp_ln1496_20_fu_4117_p2;
wire   [0:0] trunc_ln791_21_fu_4129_p1;
wire   [12:0] select_ln19_189_fu_4133_p3;
wire   [12:0] add_ln703_168_fu_4144_p2;
wire   [12:0] sub_ln703_129_fu_4139_p2;
wire   [12:0] select_ln19_190_fu_4149_p3;
wire   [12:0] add_ln703_169_fu_4162_p2;
wire   [12:0] sub_ln703_130_fu_4157_p2;
wire   [12:0] add_ln703_175_fu_4175_p2;
wire   [0:0] icmp_ln1496_21_fu_4180_p2;
wire   [0:0] trunc_ln791_22_fu_4192_p1;
wire   [12:0] select_ln19_198_fu_4196_p3;
wire   [12:0] add_ln703_176_fu_4207_p2;
wire   [12:0] sub_ln703_135_fu_4202_p2;
wire   [12:0] select_ln19_199_fu_4212_p3;
wire   [12:0] add_ln703_177_fu_4225_p2;
wire   [12:0] sub_ln703_136_fu_4220_p2;
wire   [12:0] add_ln703_183_fu_4238_p2;
wire   [0:0] icmp_ln1496_22_fu_4243_p2;
wire   [0:0] trunc_ln791_23_fu_4255_p1;
wire   [12:0] select_ln19_207_fu_4259_p3;
wire   [12:0] add_ln703_184_fu_4270_p2;
wire   [12:0] sub_ln703_141_fu_4265_p2;
wire   [12:0] select_ln19_208_fu_4275_p3;
wire   [12:0] add_ln703_185_fu_4288_p2;
wire   [12:0] sub_ln703_142_fu_4283_p2;
wire   [12:0] add_ln703_191_fu_4301_p2;
wire   [0:0] icmp_ln1496_23_fu_4306_p2;
wire   [0:0] trunc_ln791_24_fu_4318_p1;
wire   [12:0] select_ln19_216_fu_4322_p3;
wire   [12:0] add_ln703_192_fu_4333_p2;
wire   [12:0] sub_ln703_147_fu_4328_p2;
wire   [12:0] select_ln19_217_fu_4338_p3;
wire   [12:0] add_ln703_193_fu_4351_p2;
wire   [12:0] sub_ln703_148_fu_4346_p2;
wire   [12:0] add_ln703_199_fu_4364_p2;
wire   [0:0] icmp_ln1496_24_fu_4369_p2;
wire   [0:0] trunc_ln791_25_fu_4381_p1;
wire   [12:0] select_ln19_225_fu_4385_p3;
wire   [12:0] add_ln703_200_fu_4396_p2;
wire   [12:0] sub_ln703_153_fu_4391_p2;
wire   [12:0] select_ln19_226_fu_4401_p3;
wire   [12:0] add_ln703_201_fu_4414_p2;
wire   [12:0] sub_ln703_154_fu_4409_p2;
wire   [12:0] add_ln703_207_fu_4427_p2;
wire   [0:0] icmp_ln1496_25_fu_4432_p2;
wire   [0:0] trunc_ln791_26_fu_4444_p1;
wire   [12:0] select_ln19_234_fu_4448_p3;
wire   [12:0] add_ln703_208_fu_4459_p2;
wire   [12:0] sub_ln703_159_fu_4454_p2;
wire   [12:0] select_ln19_235_fu_4464_p3;
wire   [12:0] add_ln703_209_fu_4477_p2;
wire   [12:0] sub_ln703_160_fu_4472_p2;
wire   [12:0] add_ln703_215_fu_4490_p2;
wire   [0:0] icmp_ln1496_26_fu_4495_p2;
wire   [0:0] trunc_ln791_27_fu_4507_p1;
wire   [12:0] select_ln19_243_fu_4511_p3;
wire   [12:0] add_ln703_216_fu_4522_p2;
wire   [12:0] sub_ln703_165_fu_4517_p2;
wire   [12:0] select_ln19_244_fu_4527_p3;
wire   [12:0] add_ln703_217_fu_4540_p2;
wire   [12:0] sub_ln703_166_fu_4535_p2;
wire   [12:0] add_ln703_223_fu_4553_p2;
wire   [0:0] icmp_ln1496_27_fu_4558_p2;
wire   [0:0] trunc_ln791_28_fu_4570_p1;
wire   [12:0] select_ln19_252_fu_4574_p3;
wire   [12:0] add_ln703_224_fu_4585_p2;
wire   [12:0] sub_ln703_171_fu_4580_p2;
wire   [12:0] select_ln19_253_fu_4590_p3;
wire   [12:0] add_ln703_225_fu_4603_p2;
wire   [12:0] sub_ln703_172_fu_4598_p2;
wire   [12:0] add_ln703_231_fu_4616_p2;
wire   [0:0] icmp_ln1496_28_fu_4621_p2;
wire   [0:0] trunc_ln791_29_fu_4633_p1;
wire   [12:0] select_ln19_261_fu_4637_p3;
wire   [12:0] add_ln703_232_fu_4648_p2;
wire   [12:0] sub_ln703_177_fu_4643_p2;
wire   [12:0] select_ln19_262_fu_4653_p3;
wire   [12:0] add_ln703_233_fu_4666_p2;
wire   [12:0] sub_ln703_178_fu_4661_p2;
wire   [12:0] add_ln703_239_fu_4679_p2;
wire   [0:0] icmp_ln1496_29_fu_4684_p2;
wire   [0:0] trunc_ln791_30_fu_4696_p1;
wire   [12:0] select_ln19_270_fu_4700_p3;
wire   [12:0] add_ln703_240_fu_4711_p2;
wire   [12:0] sub_ln703_183_fu_4706_p2;
wire   [12:0] select_ln19_271_fu_4716_p3;
wire   [12:0] add_ln703_241_fu_4729_p2;
wire   [12:0] sub_ln703_184_fu_4724_p2;
wire   [12:0] add_ln703_247_fu_4747_p2;
wire   [0:0] icmp_ln1496_30_fu_4752_p2;
wire   [0:0] trunc_ln791_31_fu_4764_p1;
wire   [12:0] select_ln19_279_fu_4768_p3;
wire   [12:0] add_ln703_248_fu_4779_p2;
wire   [12:0] sub_ln703_189_fu_4774_p2;
wire   [12:0] select_ln19_280_fu_4784_p3;
wire   [12:0] add_ln703_249_fu_4797_p2;
wire   [12:0] sub_ln703_190_fu_4792_p2;
wire   [31:0] zext_ln77_fu_4810_p1;
wire   [31:0] zext_ln816_fu_4816_p1;
reg   [31:0] tmp_11_fu_4819_p4;
wire   [31:0] zext_ln816_1_fu_4829_p1;
reg   [31:0] tmp_20_fu_4832_p4;
wire   [31:0] zext_ln816_2_fu_4842_p1;
reg   [31:0] tmp_29_fu_4845_p4;
wire   [31:0] zext_ln816_3_fu_4855_p1;
reg   [31:0] tmp_38_fu_4858_p4;
wire   [31:0] zext_ln816_4_fu_4868_p1;
reg   [31:0] tmp_47_fu_4871_p4;
wire   [31:0] zext_ln816_5_fu_4881_p1;
reg   [31:0] tmp_56_fu_4884_p4;
wire   [31:0] zext_ln816_6_fu_4894_p1;
reg   [31:0] tmp_65_fu_4897_p4;
wire   [31:0] zext_ln816_7_fu_4907_p1;
reg   [31:0] tmp_74_fu_4910_p4;
wire   [31:0] zext_ln816_8_fu_4920_p1;
reg   [31:0] tmp_83_fu_4923_p4;
wire   [31:0] zext_ln816_9_fu_4933_p1;
reg   [31:0] tmp_92_fu_4936_p4;
wire   [31:0] zext_ln816_10_fu_4946_p1;
reg   [31:0] tmp_101_fu_4949_p4;
wire   [31:0] zext_ln816_11_fu_4959_p1;
reg   [31:0] tmp_110_fu_4962_p4;
wire   [31:0] zext_ln816_12_fu_4972_p1;
reg   [31:0] tmp_119_fu_4975_p4;
wire   [31:0] zext_ln816_13_fu_4985_p1;
reg   [31:0] tmp_128_fu_4988_p4;
wire   [31:0] zext_ln816_14_fu_4998_p1;
reg   [31:0] tmp_137_fu_5001_p4;
wire   [31:0] zext_ln816_15_fu_5011_p1;
reg   [31:0] tmp_146_fu_5014_p4;
wire   [31:0] zext_ln816_16_fu_5024_p1;
reg   [31:0] tmp_155_fu_5027_p4;
wire   [31:0] zext_ln816_17_fu_5037_p1;
reg   [31:0] tmp_164_fu_5040_p4;
wire   [31:0] zext_ln816_18_fu_5050_p1;
reg   [31:0] tmp_173_fu_5053_p4;
wire   [31:0] zext_ln816_19_fu_5063_p1;
reg   [31:0] tmp_182_fu_5066_p4;
wire   [31:0] zext_ln816_20_fu_5076_p1;
reg   [31:0] tmp_191_fu_5079_p4;
wire   [31:0] zext_ln816_21_fu_5089_p1;
reg   [31:0] tmp_200_fu_5092_p4;
wire   [31:0] zext_ln816_22_fu_5102_p1;
reg   [31:0] tmp_209_fu_5105_p4;
wire   [31:0] zext_ln816_23_fu_5115_p1;
reg   [31:0] tmp_218_fu_5118_p4;
wire   [31:0] zext_ln816_24_fu_5128_p1;
reg   [31:0] tmp_227_fu_5131_p4;
wire   [31:0] zext_ln816_25_fu_5141_p1;
reg   [31:0] tmp_236_fu_5144_p4;
wire   [31:0] zext_ln816_26_fu_5154_p1;
reg   [31:0] tmp_245_fu_5157_p4;
wire   [31:0] zext_ln816_27_fu_5167_p1;
reg   [31:0] tmp_254_fu_5170_p4;
wire   [31:0] zext_ln816_28_fu_5180_p1;
reg   [31:0] tmp_263_fu_5183_p4;
wire   [31:0] zext_ln816_29_fu_5193_p1;
reg   [31:0] tmp_272_fu_5196_p4;
wire   [31:0] zext_ln816_30_fu_5206_p1;
wire   [12:0] add_ln703_255_fu_5219_p2;
wire   [0:0] icmp_ln1496_31_fu_5224_p2;
wire   [0:0] xor_ln1496_31_fu_5230_p2;
reg   [31:0] tmp_281_fu_5209_p4;
wire   [31:0] zext_ln816_31_fu_5236_p1;
wire    ap_CS_fsm_state40;
reg    ap_block_state40;
reg   [36:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_672;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 axi_input_V_V_0_sel_rd = 1'b0;
#0 axi_input_V_V_0_sel_wr = 1'b0;
#0 axi_input_V_V_0_state = 2'd0;
#0 axi_output_V_V_1_sel_rd = 1'b0;
#0 axi_output_V_V_1_sel_wr = 1'b0;
#0 axi_output_V_V_1_state = 2'd0;
#0 weight_input_V_V_0_sel_rd = 1'b0;
#0 weight_input_V_V_0_sel_wr = 1'b0;
#0 weight_input_V_V_0_state = 2'd0;
#0 LIMIT_V_0 = 13'd0;
#0 LIMIT_V_1 = 13'd0;
#0 LIMIT_V_2 = 13'd0;
#0 LIMIT_V_3 = 13'd0;
#0 LIMIT_V_4 = 13'd0;
#0 LIMIT_V_5 = 13'd0;
#0 LIMIT_V_6 = 13'd0;
#0 LIMIT_V_7 = 13'd0;
#0 LIMIT_V_8 = 13'd0;
#0 LIMIT_V_9 = 13'd0;
#0 LIMIT_V_10 = 13'd0;
#0 LIMIT_V_11 = 13'd0;
#0 LIMIT_V_12 = 13'd0;
#0 LIMIT_V_13 = 13'd0;
#0 LIMIT_V_14 = 13'd0;
#0 LIMIT_V_15 = 13'd0;
#0 LIMIT_V_16 = 13'd0;
#0 LIMIT_V_17 = 13'd0;
#0 LIMIT_V_18 = 13'd0;
#0 LIMIT_V_19 = 13'd0;
#0 LIMIT_V_20 = 13'd0;
#0 LIMIT_V_21 = 13'd0;
#0 LIMIT_V_22 = 13'd0;
#0 LIMIT_V_23 = 13'd0;
#0 LIMIT_V_24 = 13'd0;
#0 LIMIT_V_25 = 13'd0;
#0 LIMIT_V_26 = 13'd0;
#0 LIMIT_V_27 = 13'd0;
#0 LIMIT_V_28 = 13'd0;
#0 LIMIT_V_29 = 13'd0;
#0 LIMIT_V_30 = 13'd0;
#0 LIMIT_V_31 = 13'd0;
#0 WIN_V_0_1 = 13'd0;
#0 WIN_V_0_2 = 13'd0;
#0 WIN_V_1_1 = 13'd0;
#0 WIN_V_1_2 = 13'd0;
#0 WIN_V_2_1 = 13'd0;
#0 WIN_V_2_2 = 13'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

integer_convolutibkb #(
    .DataWidth( 9 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
FILTER_WEIGHT_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(FILTER_WEIGHT_V_address0),
    .ce0(FILTER_WEIGHT_V_ce0),
    .we0(FILTER_WEIGHT_V_we0),
    .d0(FILTER_WEIGHT_V_d0),
    .q0(FILTER_WEIGHT_V_q0)
);

integer_convoluticud #(
    .DataWidth( 13 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
LB_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LB_V_0_address0),
    .ce0(LB_V_0_ce0),
    .we0(LB_V_0_we0),
    .d0(LB_V_1_q0),
    .q0(LB_V_0_q0)
);

integer_convoluticud #(
    .DataWidth( 13 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
LB_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(LB_V_1_address0),
    .ce0(LB_V_1_ce0),
    .we0(LB_V_1_we0),
    .d0(LB_V_1_d0),
    .q0(LB_V_1_q0)
);

integer_convolution_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
integer_convolution_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .interrupt_flag_V(interrupt_flag_V)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((icmp_ln64_fu_753_p2 == 1'd1) | (interrupt_flag_V_rea_reg_5256 == 1'd0)))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((icmp_ln64_fu_753_p2 == 1'd1) | (interrupt_flag_V_rea_reg_5256 == 1'd0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        axi_input_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((axi_input_V_V_0_ack_out == 1'b1) & (axi_input_V_V_0_vld_out == 1'b1))) begin
            axi_input_V_V_0_sel_rd <= ~axi_input_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        axi_input_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((axi_input_V_V_0_ack_in == 1'b1) & (axi_input_V_V_0_vld_in == 1'b1))) begin
            axi_input_V_V_0_sel_wr <= ~axi_input_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        axi_input_V_V_0_state <= 2'd0;
    end else begin
        if ((((axi_input_V_V_0_state == 2'd2) & (axi_input_V_V_0_vld_in == 1'b0)) | ((axi_input_V_V_0_state == 2'd3) & (axi_input_V_V_0_vld_in == 1'b0) & (axi_input_V_V_0_ack_out == 1'b1)))) begin
            axi_input_V_V_0_state <= 2'd2;
        end else if ((((axi_input_V_V_0_state == 2'd1) & (axi_input_V_V_0_ack_out == 1'b0)) | ((axi_input_V_V_0_state == 2'd3) & (axi_input_V_V_0_ack_out == 1'b0) & (axi_input_V_V_0_vld_in == 1'b1)))) begin
            axi_input_V_V_0_state <= 2'd1;
        end else if (((~((axi_input_V_V_0_ack_out == 1'b0) & (axi_input_V_V_0_vld_in == 1'b1)) & ~((axi_input_V_V_0_vld_in == 1'b0) & (axi_input_V_V_0_ack_out == 1'b1)) & (axi_input_V_V_0_state == 2'd3)) | ((axi_input_V_V_0_state == 2'd1) & (axi_input_V_V_0_ack_out == 1'b1)) | ((axi_input_V_V_0_state == 2'd2) & (axi_input_V_V_0_vld_in == 1'b1)))) begin
            axi_input_V_V_0_state <= 2'd3;
        end else begin
            axi_input_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        axi_output_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((axi_output_V_V_1_ack_out == 1'b1) & (axi_output_V_V_1_vld_out == 1'b1))) begin
            axi_output_V_V_1_sel_rd <= ~axi_output_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        axi_output_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((axi_output_V_V_1_ack_in == 1'b1) & (axi_output_V_V_1_vld_in == 1'b1))) begin
            axi_output_V_V_1_sel_wr <= ~axi_output_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        axi_output_V_V_1_state <= 2'd0;
    end else begin
        if ((((axi_output_V_V_1_state == 2'd2) & (axi_output_V_V_1_vld_in == 1'b0)) | ((axi_output_V_V_1_state == 2'd3) & (axi_output_V_V_1_vld_in == 1'b0) & (axi_output_V_V_1_ack_out == 1'b1)))) begin
            axi_output_V_V_1_state <= 2'd2;
        end else if ((((axi_output_V_V_1_state == 2'd1) & (axi_output_V_V_TREADY == 1'b0)) | ((axi_output_V_V_1_state == 2'd3) & (axi_output_V_V_TREADY == 1'b0) & (axi_output_V_V_1_vld_in == 1'b1)))) begin
            axi_output_V_V_1_state <= 2'd1;
        end else if (((~((axi_output_V_V_1_vld_in == 1'b0) & (axi_output_V_V_1_ack_out == 1'b1)) & ~((axi_output_V_V_TREADY == 1'b0) & (axi_output_V_V_1_vld_in == 1'b1)) & (axi_output_V_V_1_state == 2'd3)) | ((axi_output_V_V_1_state == 2'd1) & (axi_output_V_V_1_ack_out == 1'b1)) | ((axi_output_V_V_1_state == 2'd2) & (axi_output_V_V_1_vld_in == 1'b1)))) begin
            axi_output_V_V_1_state <= 2'd3;
        end else begin
            axi_output_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_input_V_V_0_sel_rd <= 1'b0;
    end else begin
        if (((weight_input_V_V_0_ack_out == 1'b1) & (weight_input_V_V_0_vld_out == 1'b1))) begin
            weight_input_V_V_0_sel_rd <= ~weight_input_V_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_input_V_V_0_sel_wr <= 1'b0;
    end else begin
        if (((weight_input_V_V_0_ack_in == 1'b1) & (weight_input_V_V_0_vld_in == 1'b1))) begin
            weight_input_V_V_0_sel_wr <= ~weight_input_V_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        weight_input_V_V_0_state <= 2'd0;
    end else begin
        if ((((weight_input_V_V_0_state == 2'd2) & (weight_input_V_V_0_vld_in == 1'b0)) | ((weight_input_V_V_0_state == 2'd3) & (weight_input_V_V_0_vld_in == 1'b0) & (weight_input_V_V_0_ack_out == 1'b1)))) begin
            weight_input_V_V_0_state <= 2'd2;
        end else if ((((weight_input_V_V_0_state == 2'd1) & (weight_input_V_V_0_ack_out == 1'b0)) | ((weight_input_V_V_0_state == 2'd3) & (weight_input_V_V_0_ack_out == 1'b0) & (weight_input_V_V_0_vld_in == 1'b1)))) begin
            weight_input_V_V_0_state <= 2'd1;
        end else if (((~((weight_input_V_V_0_vld_in == 1'b0) & (weight_input_V_V_0_ack_out == 1'b1)) & ~((weight_input_V_V_0_ack_out == 1'b0) & (weight_input_V_V_0_vld_in == 1'b1)) & (weight_input_V_V_0_state == 2'd3)) | ((weight_input_V_V_0_state == 2'd1) & (weight_input_V_V_0_ack_out == 1'b1)) | ((weight_input_V_V_0_state == 2'd2) & (weight_input_V_V_0_vld_in == 1'b1)))) begin
            weight_input_V_V_0_state <= 2'd3;
        end else begin
            weight_input_V_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_672)) begin
        if ((trunc_ln1496_fu_1069_p1 == 5'd31)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_31[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd30)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_30[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd29)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_29[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd28)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_28[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd27)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_27[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd26)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_26[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd25)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_25[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd24)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_24[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd23)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_23[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd22)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_22[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd21)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_21[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd20)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_20[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd19)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_19[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd18)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_18[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd17)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_17[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd16)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_16[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd15)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_15[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd14)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_14[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd13)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_13[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd12)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_12[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd11)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_11[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd10)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_10[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd9)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_9[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd8)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_8[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd7)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_7[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd6)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_6[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd5)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_5[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd4)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_4[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd3)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_3[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd2)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_2[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd1)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_1[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd0)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8] <= LIMIT_V_0[12 : 8];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_672)) begin
        if ((trunc_ln1496_fu_1069_p1 == 5'd31)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_31[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd30)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_30[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd29)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_29[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd28)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_28[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd27)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_27[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd26)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_26[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd25)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_25[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd24)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_24[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd23)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_23[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd22)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_22[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd21)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_21[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd20)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_20[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd19)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_19[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd18)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_18[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd17)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_17[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd16)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_16[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd15)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_15[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd14)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_14[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd13)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_13[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd12)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_12[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd11)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_11[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd10)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_10[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd9)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_9[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd8)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_8[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd7)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_7[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd6)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_6[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd5)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_5[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd4)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_4[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd3)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_3[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd2)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_2[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd1)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_1[12 : 8];
        end else if ((trunc_ln1496_fu_1069_p1 == 5'd0)) begin
                        ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8] <= LIMIT_V_0[12 : 8];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        bvh_d_index_reg_440 <= c_reg_7024;
    end else if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((icmp_ln64_fu_753_p2 == 1'd1) | (interrupt_flag_V_rea_reg_5256 == 1'd0)))) begin
        bvh_d_index_reg_440 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((interrupt_flag_V_rea_read_fu_310_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_407 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        f_0_reg_407 <= f_reg_5264;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_418 <= add_ln75_reg_5283;
    end else if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((icmp_ln64_fu_753_p2 == 1'd1) | (interrupt_flag_V_rea_reg_5256 == 1'd0)))) begin
        indvar_flatten_reg_418 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_0_reg_429 <= select_ln75_reg_5300;
    end else if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((icmp_ln64_fu_753_p2 == 1'd1) | (interrupt_flag_V_rea_reg_5256 == 1'd0)))) begin
        r_0_reg_429 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_983_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        LB_V_0_addr_reg_5305 <= zext_ln141_fu_1063_p1;
        LB_V_1_addr_reg_5310 <= zext_ln141_fu_1063_p1;
        select_ln168_1_reg_5295 <= select_ln168_1_fu_1047_p3;
        select_ln168_reg_5288 <= select_ln168_fu_1001_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        LB_V_0_load_reg_5639 <= LB_V_0_q0;
        LB_V_1_load_reg_5708 <= LB_V_1_q0;
        tmp_10_reg_5822 <= FILTER_WEIGHT_V_q0[32'd8];
        tmp_3_reg_5787 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_4_reg_5792 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_5_reg_5797 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_6_reg_5802 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_7_reg_5807 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_8_reg_5812 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_9_reg_5817 <= FILTER_WEIGHT_V_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd0) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_0[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd1) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_1[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd10) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_10[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd11) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_11[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd12) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_12[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd13) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_13[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd14) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_14[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd15) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_15[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd16) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_16[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd17) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_17[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd18) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_18[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd19) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_19[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd2) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_2[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd20) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_20[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd21) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_21[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd22) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_22[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd23) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_23[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd24) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_24[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd25) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_25[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd26) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_26[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd27) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_27[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd28) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_28[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd29) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_29[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd3) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_3[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd30) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_30[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd31) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_31[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd4) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_4[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd5) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_5[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd6) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_6[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd7) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_7[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd8) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_8[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_5269 == 5'd9) & (1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
        LIMIT_V_9[12 : 8] <= shl_ln_fu_783_p3[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        UnifiedRetVal_i69_reg_521[12 : 8] <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[12 : 8];
        UnifiedRetVal_i_reg_451[12 : 8] <= ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[12 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        WIN_V_0_1 <= WIN_V_0_2;
        WIN_V_0_2 <= LB_V_0_load_reg_5639;
        WIN_V_1_1 <= WIN_V_1_2;
        WIN_V_1_2 <= LB_V_1_load_reg_5708;
        WIN_V_2_1 <= WIN_V_2_2;
        WIN_V_2_2 <= tmp_V_3_reg_5745;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        WIN_V_0_1_load_reg_6461 <= WIN_V_0_1;
        WIN_V_0_2_load_reg_6481 <= WIN_V_0_2;
        WIN_V_1_1_load_reg_6517 <= WIN_V_1_1;
        WIN_V_1_2_load_reg_6522 <= WIN_V_1_2;
        WIN_V_2_1_load_reg_6528 <= WIN_V_2_1;
        WIN_V_2_2_load_reg_6533 <= WIN_V_2_2;
        select_ln19_101_reg_6734 <= select_ln19_101_fu_2952_p3;
        select_ln19_104_reg_6739 <= select_ln19_104_fu_2995_p3;
        select_ln19_107_reg_6744 <= select_ln19_107_fu_3038_p3;
        select_ln19_110_reg_6749 <= select_ln19_110_fu_3081_p3;
        select_ln19_113_reg_6754 <= select_ln19_113_fu_3124_p3;
        select_ln19_116_reg_6759 <= select_ln19_116_fu_3167_p3;
        select_ln19_119_reg_6764 <= select_ln19_119_fu_3210_p3;
        select_ln19_11_reg_6584 <= select_ln19_11_fu_1662_p3;
        select_ln19_122_reg_6769 <= select_ln19_122_fu_3253_p3;
        select_ln19_125_reg_6774 <= select_ln19_125_fu_3296_p3;
        select_ln19_128_reg_6779 <= select_ln19_128_fu_3339_p3;
        select_ln19_131_reg_6784 <= select_ln19_131_fu_3382_p3;
        select_ln19_134_reg_6789 <= select_ln19_134_fu_3425_p3;
        select_ln19_137_reg_6794 <= select_ln19_137_fu_3474_p3;
        select_ln19_14_reg_6589 <= select_ln19_14_fu_1705_p3;
        select_ln19_17_reg_6594 <= select_ln19_17_fu_1748_p3;
        select_ln19_20_reg_6599 <= select_ln19_20_fu_1791_p3;
        select_ln19_23_reg_6604 <= select_ln19_23_fu_1834_p3;
        select_ln19_26_reg_6609 <= select_ln19_26_fu_1877_p3;
        select_ln19_29_reg_6614 <= select_ln19_29_fu_1920_p3;
        select_ln19_2_reg_6559 <= select_ln19_2_fu_1519_p3;
        select_ln19_32_reg_6619 <= select_ln19_32_fu_1963_p3;
        select_ln19_35_reg_6624 <= select_ln19_35_fu_2006_p3;
        select_ln19_38_reg_6629 <= select_ln19_38_fu_2049_p3;
        select_ln19_41_reg_6634 <= select_ln19_41_fu_2092_p3;
        select_ln19_44_reg_6639 <= select_ln19_44_fu_2135_p3;
        select_ln19_47_reg_6644 <= select_ln19_47_fu_2178_p3;
        select_ln19_50_reg_6649 <= select_ln19_50_fu_2221_p3;
        select_ln19_53_reg_6654 <= select_ln19_53_fu_2264_p3;
        select_ln19_56_reg_6659 <= select_ln19_56_fu_2307_p3;
        select_ln19_59_reg_6664 <= select_ln19_59_fu_2350_p3;
        select_ln19_5_reg_6569 <= select_ln19_5_fu_1569_p3;
        select_ln19_62_reg_6669 <= select_ln19_62_fu_2393_p3;
        select_ln19_65_reg_6674 <= select_ln19_65_fu_2436_p3;
        select_ln19_68_reg_6679 <= select_ln19_68_fu_2479_p3;
        select_ln19_71_reg_6684 <= select_ln19_71_fu_2522_p3;
        select_ln19_74_reg_6689 <= select_ln19_74_fu_2565_p3;
        select_ln19_77_reg_6694 <= select_ln19_77_fu_2608_p3;
        select_ln19_80_reg_6699 <= select_ln19_80_fu_2651_p3;
        select_ln19_83_reg_6704 <= select_ln19_83_fu_2694_p3;
        select_ln19_86_reg_6709 <= select_ln19_86_fu_2737_p3;
        select_ln19_89_reg_6714 <= select_ln19_89_fu_2780_p3;
        select_ln19_8_reg_6579 <= select_ln19_8_fu_1619_p3;
        select_ln19_92_reg_6719 <= select_ln19_92_fu_2823_p3;
        select_ln19_95_reg_6724 <= select_ln19_95_fu_2866_p3;
        select_ln19_98_reg_6729 <= select_ln19_98_fu_2909_p3;
        sub_ln703_3_reg_6564 <= sub_ln703_3_fu_1526_p2;
        sub_ln703_6_reg_6574 <= sub_ln703_6_fu_1576_p2;
        sub_ln703_reg_6539 <= sub_ln703_fu_1477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln75_reg_5283 <= add_ln75_fu_989_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln168_reg_5827 <= and_ln168_fu_1353_p2;
        tmp_V_3_reg_5745 <= tmp_V_3_fu_1329_p1;
        trunc_ln791_reg_5782 <= trunc_ln791_fu_1334_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        and_ln168_reg_5827_pp0_iter1_reg <= and_ln168_reg_5827;
    end
end

always @ (posedge ap_clk) begin
    if ((axi_input_V_V_0_load_A == 1'b1)) begin
        axi_input_V_V_0_payload_A <= axi_input_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((axi_input_V_V_0_load_B == 1'b1)) begin
        axi_input_V_V_0_payload_B <= axi_input_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((axi_output_V_V_1_load_A == 1'b1)) begin
        axi_output_V_V_1_payload_A <= tmp_V_4_fu_5240_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((axi_output_V_V_1_load_B == 1'b1)) begin
        axi_output_V_V_1_payload_B <= tmp_V_4_fu_5240_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        c_reg_7024 <= c_fu_4742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (interrupt_flag_V_rea_reg_5256 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        f_reg_5264 <= f_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln75_reg_5279 <= icmp_ln75_fu_983_p2;
        select_ln168_reg_5288_pp0_iter1_reg <= select_ln168_reg_5288;
        select_ln19_281_reg_7034 <= select_ln19_281_fu_4802_p3;
        xor_ln1496_30_reg_7029 <= xor_ln1496_30_fu_4758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        interrupt_flag_V_rea_reg_5256 <= interrupt_flag_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_739 <= grp_fu_689_p3;
        reg_743 <= grp_fu_731_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        select_ln19_146_reg_6879 <= select_ln19_146_fu_3852_p3;
        xor_ln1496_10_reg_6849 <= xor_ln1496_10_fu_3707_p2;
        xor_ln1496_11_reg_6854 <= xor_ln1496_11_fu_3728_p2;
        xor_ln1496_12_reg_6859 <= xor_ln1496_12_fu_3749_p2;
        xor_ln1496_13_reg_6864 <= xor_ln1496_13_fu_3770_p2;
        xor_ln1496_14_reg_6869 <= xor_ln1496_14_fu_3791_p2;
        xor_ln1496_15_reg_6874 <= xor_ln1496_15_fu_3808_p2;
        xor_ln1496_1_reg_6804 <= xor_ln1496_1_fu_3518_p2;
        xor_ln1496_2_reg_6809 <= xor_ln1496_2_fu_3539_p2;
        xor_ln1496_3_reg_6814 <= xor_ln1496_3_fu_3560_p2;
        xor_ln1496_4_reg_6819 <= xor_ln1496_4_fu_3581_p2;
        xor_ln1496_5_reg_6824 <= xor_ln1496_5_fu_3602_p2;
        xor_ln1496_6_reg_6829 <= xor_ln1496_6_fu_3623_p2;
        xor_ln1496_7_reg_6834 <= xor_ln1496_7_fu_3644_p2;
        xor_ln1496_8_reg_6839 <= xor_ln1496_8_fu_3665_p2;
        xor_ln1496_9_reg_6844 <= xor_ln1496_9_fu_3686_p2;
        xor_ln1496_reg_6799 <= xor_ln1496_fu_3497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        select_ln19_155_reg_6889 <= select_ln19_155_fu_3915_p3;
        xor_ln1496_16_reg_6884 <= xor_ln1496_16_fu_3871_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        select_ln19_164_reg_6899 <= select_ln19_164_fu_3978_p3;
        xor_ln1496_17_reg_6894 <= xor_ln1496_17_fu_3934_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        select_ln19_173_reg_6909 <= select_ln19_173_fu_4041_p3;
        xor_ln1496_18_reg_6904 <= xor_ln1496_18_fu_3997_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        select_ln19_182_reg_6919 <= select_ln19_182_fu_4104_p3;
        xor_ln1496_19_reg_6914 <= xor_ln1496_19_fu_4060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        select_ln19_191_reg_6929 <= select_ln19_191_fu_4167_p3;
        xor_ln1496_20_reg_6924 <= xor_ln1496_20_fu_4123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        select_ln19_200_reg_6939 <= select_ln19_200_fu_4230_p3;
        xor_ln1496_21_reg_6934 <= xor_ln1496_21_fu_4186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        select_ln19_209_reg_6949 <= select_ln19_209_fu_4293_p3;
        xor_ln1496_22_reg_6944 <= xor_ln1496_22_fu_4249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25))) begin
        select_ln19_218_reg_6959 <= select_ln19_218_fu_4356_p3;
        xor_ln1496_23_reg_6954 <= xor_ln1496_23_fu_4312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
        select_ln19_227_reg_6969 <= select_ln19_227_fu_4419_p3;
        xor_ln1496_24_reg_6964 <= xor_ln1496_24_fu_4375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27))) begin
        select_ln19_236_reg_6979 <= select_ln19_236_fu_4482_p3;
        xor_ln1496_25_reg_6974 <= xor_ln1496_25_fu_4438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28))) begin
        select_ln19_245_reg_6989 <= select_ln19_245_fu_4545_p3;
        xor_ln1496_26_reg_6984 <= xor_ln1496_26_fu_4501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29))) begin
        select_ln19_254_reg_6999 <= select_ln19_254_fu_4608_p3;
        xor_ln1496_27_reg_6994 <= xor_ln1496_27_fu_4564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30))) begin
        select_ln19_263_reg_7009 <= select_ln19_263_fu_4671_p3;
        xor_ln1496_28_reg_7004 <= xor_ln1496_28_fu_4627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31))) begin
        select_ln19_272_reg_7019 <= select_ln19_272_fu_4734_p3;
        xor_ln1496_29_reg_7014 <= xor_ln1496_29_fu_4690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_fu_983_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln75_reg_5300 <= select_ln75_fu_1055_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        tmp_100_reg_6276 <= FILTER_WEIGHT_V_q0[32'd8];
        tmp_93_reg_6241 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_94_reg_6246 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_95_reg_6251 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_96_reg_6256 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_97_reg_6261 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_98_reg_6266 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_99_reg_6271 <= FILTER_WEIGHT_V_q0[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        tmp_102_reg_6286 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_103_reg_6291 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_104_reg_6296 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_105_reg_6301 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_106_reg_6306 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_107_reg_6311 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_108_reg_6316 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_109_reg_6321 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        tmp_111_reg_6331 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_112_reg_6336 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_113_reg_6341 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_114_reg_6346 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_115_reg_6351 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_116_reg_6356 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_117_reg_6361 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_118_reg_6366 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        tmp_120_reg_6376 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_121_reg_6381 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_122_reg_6386 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_123_reg_6391 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_124_reg_6396 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_125_reg_6401 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_126_reg_6406 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_127_reg_6411 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        tmp_129_reg_6421 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_130_reg_6426 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_131_reg_6431 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_132_reg_6436 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_133_reg_6441 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_134_reg_6446 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_135_reg_6451 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_136_reg_6456 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_12_reg_5836 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_13_reg_5841 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_14_reg_5846 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_15_reg_5851 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_16_reg_5856 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_17_reg_5861 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_18_reg_5866 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_19_reg_5871 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_21_reg_5881 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_22_reg_5886 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_23_reg_5891 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_24_reg_5896 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_25_reg_5901 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_26_reg_5906 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_27_reg_5911 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_28_reg_5916 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_30_reg_5926 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_31_reg_5931 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_32_reg_5936 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_33_reg_5941 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_34_reg_5946 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_35_reg_5951 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_36_reg_5956 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_37_reg_5961 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        tmp_39_reg_5971 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_40_reg_5976 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_41_reg_5981 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_42_reg_5986 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_43_reg_5991 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_44_reg_5996 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_45_reg_6001 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_46_reg_6006 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        tmp_48_reg_6016 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_49_reg_6021 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_50_reg_6026 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_51_reg_6031 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_52_reg_6036 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_53_reg_6041 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_54_reg_6046 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_55_reg_6051 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        tmp_57_reg_6061 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_58_reg_6066 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_59_reg_6071 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_60_reg_6076 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_61_reg_6081 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_62_reg_6086 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_63_reg_6091 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_64_reg_6096 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        tmp_66_reg_6106 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_67_reg_6111 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_68_reg_6116 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_69_reg_6121 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_70_reg_6126 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_71_reg_6131 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_72_reg_6136 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_73_reg_6141 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        tmp_75_reg_6151 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_76_reg_6156 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_77_reg_6161 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_78_reg_6166 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_79_reg_6171 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_80_reg_6176 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_81_reg_6181 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_82_reg_6186 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        tmp_84_reg_6196 <= FILTER_WEIGHT_V_q0[32'd1];
        tmp_85_reg_6201 <= FILTER_WEIGHT_V_q0[32'd2];
        tmp_86_reg_6206 <= FILTER_WEIGHT_V_q0[32'd3];
        tmp_87_reg_6211 <= FILTER_WEIGHT_V_q0[32'd4];
        tmp_88_reg_6216 <= FILTER_WEIGHT_V_q0[32'd5];
        tmp_89_reg_6221 <= FILTER_WEIGHT_V_q0[32'd6];
        tmp_90_reg_6226 <= FILTER_WEIGHT_V_q0[32'd7];
        tmp_91_reg_6231 <= FILTER_WEIGHT_V_q0[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_V_2_fu_306 <= tmp_V_4_fu_5240_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (interrupt_flag_V_rea_reg_5256 == 1'd1) & (icmp_ln64_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln203_reg_5269 <= trunc_ln203_fu_775_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        trunc_ln791_10_reg_6236 <= trunc_ln791_10_fu_1394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        trunc_ln791_11_reg_6281 <= trunc_ln791_11_fu_1398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        trunc_ln791_12_reg_6326 <= trunc_ln791_12_fu_1402_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        trunc_ln791_13_reg_6371 <= trunc_ln791_13_fu_1406_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        trunc_ln791_14_reg_6416 <= trunc_ln791_14_fu_1410_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln791_1_reg_5831 <= trunc_ln791_1_fu_1358_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        trunc_ln791_2_reg_5876 <= trunc_ln791_2_fu_1362_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        trunc_ln791_3_reg_5921 <= trunc_ln791_3_fu_1366_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        trunc_ln791_4_reg_5966 <= trunc_ln791_4_fu_1370_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        trunc_ln791_5_reg_6011 <= trunc_ln791_5_fu_1374_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        trunc_ln791_6_reg_6056 <= trunc_ln791_6_fu_1378_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        trunc_ln791_7_reg_6101 <= trunc_ln791_7_fu_1382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        trunc_ln791_8_reg_6146 <= trunc_ln791_8_fu_1386_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        trunc_ln791_9_reg_6191 <= trunc_ln791_9_fu_1390_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((weight_input_V_V_0_load_A == 1'b1)) begin
        weight_input_V_V_0_payload_A <= weight_input_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((weight_input_V_V_0_load_B == 1'b1)) begin
        weight_input_V_V_0_payload_B <= weight_input_V_V_TDATA;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31))) begin
        FILTER_WEIGHT_V_address0 = 5'd31;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30))) begin
        FILTER_WEIGHT_V_address0 = 5'd30;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29))) begin
        FILTER_WEIGHT_V_address0 = 5'd29;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28))) begin
        FILTER_WEIGHT_V_address0 = 5'd28;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27))) begin
        FILTER_WEIGHT_V_address0 = 5'd27;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26))) begin
        FILTER_WEIGHT_V_address0 = 5'd26;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25))) begin
        FILTER_WEIGHT_V_address0 = 5'd25;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24))) begin
        FILTER_WEIGHT_V_address0 = 5'd24;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23))) begin
        FILTER_WEIGHT_V_address0 = 5'd23;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22))) begin
        FILTER_WEIGHT_V_address0 = 5'd22;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21))) begin
        FILTER_WEIGHT_V_address0 = 5'd21;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20))) begin
        FILTER_WEIGHT_V_address0 = 5'd20;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19))) begin
        FILTER_WEIGHT_V_address0 = 5'd19;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        FILTER_WEIGHT_V_address0 = 5'd18;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17))) begin
        FILTER_WEIGHT_V_address0 = 5'd17;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        FILTER_WEIGHT_V_address0 = 5'd16;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        FILTER_WEIGHT_V_address0 = 5'd15;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        FILTER_WEIGHT_V_address0 = 5'd14;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        FILTER_WEIGHT_V_address0 = 5'd13;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        FILTER_WEIGHT_V_address0 = 5'd12;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        FILTER_WEIGHT_V_address0 = 5'd11;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        FILTER_WEIGHT_V_address0 = 5'd10;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        FILTER_WEIGHT_V_address0 = 5'd9;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        FILTER_WEIGHT_V_address0 = 5'd8;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        FILTER_WEIGHT_V_address0 = 5'd7;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        FILTER_WEIGHT_V_address0 = 5'd6;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        FILTER_WEIGHT_V_address0 = 5'd5;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        FILTER_WEIGHT_V_address0 = 5'd4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        FILTER_WEIGHT_V_address0 = 5'd3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        FILTER_WEIGHT_V_address0 = 5'd2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        FILTER_WEIGHT_V_address0 = 5'd1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        FILTER_WEIGHT_V_address0 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        FILTER_WEIGHT_V_address0 = zext_ln66_fu_765_p1;
    end else begin
        FILTER_WEIGHT_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage31_11001) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage29_11001) & (1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage28_11001) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage27_11001) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage25_11001) & (1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage24_11001) & (1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        FILTER_WEIGHT_V_ce0 = 1'b1;
    end else begin
        FILTER_WEIGHT_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (interrupt_flag_V_rea_reg_5256 == 1'd1) & (icmp_ln64_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        FILTER_WEIGHT_V_we0 = 1'b1;
    end else begin
        FILTER_WEIGHT_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            LB_V_0_address0 = LB_V_0_addr_reg_5305;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            LB_V_0_address0 = zext_ln141_fu_1063_p1;
        end else begin
            LB_V_0_address0 = 'bx;
        end
    end else begin
        LB_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        LB_V_0_ce0 = 1'b1;
    end else begin
        LB_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        LB_V_0_we0 = 1'b1;
    end else begin
        LB_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            LB_V_1_address0 = LB_V_1_addr_reg_5310;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            LB_V_1_address0 = zext_ln141_fu_1063_p1;
        end else begin
            LB_V_1_address0 = 'bx;
        end
    end else begin
        LB_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        LB_V_1_ce0 = 1'b1;
    end else begin
        LB_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        LB_V_1_we0 = 1'b1;
    end else begin
        LB_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln75_fu_983_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((~((axi_output_V_V_1_state == 2'd1) | ((axi_output_V_V_1_state == 2'd3) & (axi_output_V_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_bvh_d_index_phi_fu_444_p4 = c_reg_7024;
    end else begin
        ap_phi_mux_bvh_d_index_phi_fu_444_p4 = bvh_d_index_reg_440;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_422_p4 = add_ln75_reg_5283;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_422_p4 = indvar_flatten_reg_418;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_433_p4 = select_ln75_reg_5300;
    end else begin
        ap_phi_mux_r_0_phi_fu_433_p4 = r_0_reg_429;
    end
end

always @ (*) begin
    if ((~((axi_output_V_V_1_state == 2'd1) | ((axi_output_V_V_1_state == 2'd3) & (axi_output_V_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln75_reg_5279 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        axi_input_V_V_0_ack_out = 1'b1;
    end else begin
        axi_input_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((axi_input_V_V_0_sel == 1'b1)) begin
        axi_input_V_V_0_data_out = axi_input_V_V_0_payload_B;
    end else begin
        axi_input_V_V_0_data_out = axi_input_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((icmp_ln75_reg_5279 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        axi_input_V_V_TDATA_blk_n = axi_input_V_V_0_state[1'd0];
    end else begin
        axi_input_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((axi_output_V_V_1_sel == 1'b1)) begin
        axi_output_V_V_1_data_out = axi_output_V_V_1_payload_B;
    end else begin
        axi_output_V_V_1_data_out = axi_output_V_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd1 == and_ln168_reg_5827) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        axi_output_V_V_1_vld_in = 1'b1;
    end else begin
        axi_output_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln168_reg_5827_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'd1 == and_ln168_reg_5827) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        axi_output_V_V_TDATA_blk_n = axi_output_V_V_1_state[1'd1];
    end else begin
        axi_output_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_655_p1 = WIN_V_1_1_load_reg_6517;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_655_p1 = WIN_V_1_1;
    end else begin
        grp_fu_655_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_655_p2 = sub_ln703_3_reg_6564;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_655_p2 = sub_ln703_3_fu_1526_p2;
    end else begin
        grp_fu_655_p2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_661_p1 = WIN_V_1_2_load_reg_6522;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_661_p1 = WIN_V_1_2;
    end else begin
        grp_fu_661_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_666_p0 = WIN_V_1_2_load_reg_6522;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_666_p0 = WIN_V_1_2;
    end else begin
        grp_fu_666_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_697_p1 = WIN_V_2_1_load_reg_6528;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_697_p1 = WIN_V_2_1;
    end else begin
        grp_fu_697_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_697_p2 = sub_ln703_6_reg_6574;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_697_p2 = sub_ln703_6_fu_1576_p2;
    end else begin
        grp_fu_697_p2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_703_p1 = WIN_V_2_2_load_reg_6533;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_703_p1 = WIN_V_2_2;
    end else begin
        grp_fu_703_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage30)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage29)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage28)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage27)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage26)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage25)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage24)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage23)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage22)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage21)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage20)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage19)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)))) begin
        grp_fu_708_p0 = WIN_V_2_2_load_reg_6533;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_708_p0 = WIN_V_2_2;
    end else begin
        grp_fu_708_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1)) | (~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (ap_predicate_op60_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_input_V_V_0_ack_out = 1'b1;
    end else begin
        weight_input_V_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((weight_input_V_V_0_sel == 1'b1)) begin
        weight_input_V_V_0_data_out = weight_input_V_V_0_payload_B;
    end else begin
        weight_input_V_V_0_data_out = weight_input_V_V_0_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((interrupt_flag_V_rea_reg_5256 == 1'd1) & (icmp_ln64_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        weight_input_V_V_TDATA_blk_n = weight_input_V_V_0_state[1'd0];
    end else begin
        weight_input_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (1'b1 == ap_CS_fsm_state2) & ((icmp_ln64_fu_753_p2 == 1'd1) | (interrupt_flag_V_rea_reg_5256 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0)) & (interrupt_flag_V_rea_reg_5256 == 1'd1) & (icmp_ln64_fu_753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (weight_input_V_V_0_vld_out == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln75_fu_983_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln75_fu_983_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state40 : begin
            if ((~((axi_output_V_V_1_state == 2'd1) | ((axi_output_V_V_1_state == 2'd3) & (axi_output_V_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FILTER_WEIGHT_V_d0 = weight_input_V_V_0_data_out[8:0];

assign LB_V_1_d0 = axi_input_V_V_0_data_out[12:0];

assign add_ln703_100_fu_3144_p2 = (WIN_V_2_2 + select_ln19_114_fu_3131_p3);

assign add_ln703_101_fu_3162_p2 = (select_ln19_115_fu_3150_p3 + tmp_V_3_reg_5745);

assign add_ln703_102_fu_3734_p2 = (select_ln19_113_reg_6754 + select_ln19_116_reg_6759);

assign add_ln703_103_fu_3738_p2 = (add_ln703_102_fu_3734_p2 + select_ln19_110_reg_6749);

assign add_ln703_104_fu_3187_p2 = (WIN_V_0_2 + select_ln19_117_fu_3174_p3);

assign add_ln703_105_fu_3205_p2 = (LB_V_0_load_reg_5639 + select_ln19_118_fu_3193_p3);

assign add_ln703_106_fu_3230_p2 = (WIN_V_1_2 + select_ln19_120_fu_3217_p3);

assign add_ln703_107_fu_3248_p2 = (LB_V_1_load_reg_5708 + select_ln19_121_fu_3236_p3);

assign add_ln703_108_fu_3273_p2 = (WIN_V_2_2 + select_ln19_123_fu_3260_p3);

assign add_ln703_109_fu_3291_p2 = (select_ln19_124_fu_3279_p3 + tmp_V_3_reg_5745);

assign add_ln703_10_fu_1682_p2 = (WIN_V_1_2 + select_ln19_12_fu_1669_p3);

assign add_ln703_110_fu_3755_p2 = (select_ln19_122_reg_6769 + select_ln19_125_reg_6774);

assign add_ln703_111_fu_3759_p2 = (add_ln703_110_fu_3755_p2 + select_ln19_119_reg_6764);

assign add_ln703_112_fu_3316_p2 = (WIN_V_0_2 + select_ln19_126_fu_3303_p3);

assign add_ln703_113_fu_3334_p2 = (LB_V_0_load_reg_5639 + select_ln19_127_fu_3322_p3);

assign add_ln703_114_fu_3359_p2 = (WIN_V_1_2 + select_ln19_129_fu_3346_p3);

assign add_ln703_115_fu_3377_p2 = (LB_V_1_load_reg_5708 + select_ln19_130_fu_3365_p3);

assign add_ln703_116_fu_3402_p2 = (WIN_V_2_2 + select_ln19_132_fu_3389_p3);

assign add_ln703_117_fu_3420_p2 = (select_ln19_133_fu_3408_p3 + tmp_V_3_reg_5745);

assign add_ln703_118_fu_3776_p2 = (select_ln19_131_reg_6784 + select_ln19_134_reg_6789);

assign add_ln703_119_fu_3780_p2 = (add_ln703_118_fu_3776_p2 + select_ln19_128_reg_6779);

assign add_ln703_11_fu_1700_p2 = (LB_V_1_load_reg_5708 + select_ln19_13_fu_1688_p3);

assign add_ln703_120_fu_3450_p2 = (WIN_V_0_2 + select_ln19_135_fu_3436_p3);

assign add_ln703_121_fu_3469_p2 = (LB_V_0_load_reg_5639 + select_ln19_136_fu_3456_p3);

assign add_ln703_127_fu_3797_p2 = (grp_fu_747_p2 + select_ln19_137_reg_6794);

assign add_ln703_128_fu_3829_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_144_fu_3818_p3);

assign add_ln703_129_fu_3847_p2 = (LB_V_0_load_reg_5639 + select_ln19_145_fu_3834_p3);

assign add_ln703_12_fu_1725_p2 = (WIN_V_2_2 + select_ln19_15_fu_1712_p3);

assign add_ln703_135_fu_3860_p2 = (grp_fu_747_p2 + select_ln19_146_reg_6879);

assign add_ln703_136_fu_3892_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_153_fu_3881_p3);

assign add_ln703_137_fu_3910_p2 = (LB_V_0_load_reg_5639 + select_ln19_154_fu_3897_p3);

assign add_ln703_13_fu_1743_p2 = (select_ln19_16_fu_1731_p3 + tmp_V_3_reg_5745);

assign add_ln703_143_fu_3923_p2 = (grp_fu_747_p2 + select_ln19_155_reg_6889);

assign add_ln703_144_fu_3955_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_162_fu_3944_p3);

assign add_ln703_145_fu_3973_p2 = (LB_V_0_load_reg_5639 + select_ln19_163_fu_3960_p3);

assign add_ln703_14_fu_3503_p2 = (select_ln19_14_reg_6589 + select_ln19_17_reg_6594);

assign add_ln703_151_fu_3986_p2 = (grp_fu_747_p2 + select_ln19_164_reg_6899);

assign add_ln703_152_fu_4018_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_171_fu_4007_p3);

assign add_ln703_153_fu_4036_p2 = (LB_V_0_load_reg_5639 + select_ln19_172_fu_4023_p3);

assign add_ln703_159_fu_4049_p2 = (grp_fu_747_p2 + select_ln19_173_reg_6909);

assign add_ln703_15_fu_3507_p2 = (add_ln703_14_fu_3503_p2 + select_ln19_11_reg_6584);

assign add_ln703_160_fu_4081_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_180_fu_4070_p3);

assign add_ln703_161_fu_4099_p2 = (LB_V_0_load_reg_5639 + select_ln19_181_fu_4086_p3);

assign add_ln703_167_fu_4112_p2 = (grp_fu_747_p2 + select_ln19_182_reg_6919);

assign add_ln703_168_fu_4144_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_189_fu_4133_p3);

assign add_ln703_169_fu_4162_p2 = (LB_V_0_load_reg_5639 + select_ln19_190_fu_4149_p3);

assign add_ln703_16_fu_1768_p2 = (WIN_V_0_2 + select_ln19_18_fu_1755_p3);

assign add_ln703_175_fu_4175_p2 = (grp_fu_747_p2 + select_ln19_191_reg_6929);

assign add_ln703_176_fu_4207_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_198_fu_4196_p3);

assign add_ln703_177_fu_4225_p2 = (LB_V_0_load_reg_5639 + select_ln19_199_fu_4212_p3);

assign add_ln703_17_fu_1786_p2 = (LB_V_0_load_reg_5639 + select_ln19_19_fu_1774_p3);

assign add_ln703_183_fu_4238_p2 = (grp_fu_747_p2 + select_ln19_200_reg_6939);

assign add_ln703_184_fu_4270_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_207_fu_4259_p3);

assign add_ln703_185_fu_4288_p2 = (LB_V_0_load_reg_5639 + select_ln19_208_fu_4275_p3);

assign add_ln703_18_fu_1811_p2 = (WIN_V_1_2 + select_ln19_21_fu_1798_p3);

assign add_ln703_191_fu_4301_p2 = (grp_fu_747_p2 + select_ln19_209_reg_6949);

assign add_ln703_192_fu_4333_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_216_fu_4322_p3);

assign add_ln703_193_fu_4351_p2 = (LB_V_0_load_reg_5639 + select_ln19_217_fu_4338_p3);

assign add_ln703_199_fu_4364_p2 = (grp_fu_747_p2 + select_ln19_218_reg_6959);

assign add_ln703_19_fu_1829_p2 = (LB_V_1_load_reg_5708 + select_ln19_22_fu_1817_p3);

assign add_ln703_1_fu_1514_p2 = (LB_V_0_load_reg_5639 + select_ln19_1_fu_1502_p3);

assign add_ln703_200_fu_4396_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_225_fu_4385_p3);

assign add_ln703_201_fu_4414_p2 = (LB_V_0_load_reg_5639 + select_ln19_226_fu_4401_p3);

assign add_ln703_207_fu_4427_p2 = (grp_fu_747_p2 + select_ln19_227_reg_6969);

assign add_ln703_208_fu_4459_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_234_fu_4448_p3);

assign add_ln703_209_fu_4477_p2 = (LB_V_0_load_reg_5639 + select_ln19_235_fu_4464_p3);

assign add_ln703_20_fu_1854_p2 = (WIN_V_2_2 + select_ln19_24_fu_1841_p3);

assign add_ln703_215_fu_4490_p2 = (grp_fu_747_p2 + select_ln19_236_reg_6979);

assign add_ln703_216_fu_4522_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_243_fu_4511_p3);

assign add_ln703_217_fu_4540_p2 = (LB_V_0_load_reg_5639 + select_ln19_244_fu_4527_p3);

assign add_ln703_21_fu_1872_p2 = (select_ln19_25_fu_1860_p3 + tmp_V_3_reg_5745);

assign add_ln703_223_fu_4553_p2 = (grp_fu_747_p2 + select_ln19_245_reg_6989);

assign add_ln703_224_fu_4585_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_252_fu_4574_p3);

assign add_ln703_225_fu_4603_p2 = (LB_V_0_load_reg_5639 + select_ln19_253_fu_4590_p3);

assign add_ln703_22_fu_3524_p2 = (select_ln19_23_reg_6604 + select_ln19_26_reg_6609);

assign add_ln703_231_fu_4616_p2 = (grp_fu_747_p2 + select_ln19_254_reg_6999);

assign add_ln703_232_fu_4648_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_261_fu_4637_p3);

assign add_ln703_233_fu_4666_p2 = (LB_V_0_load_reg_5639 + select_ln19_262_fu_4653_p3);

assign add_ln703_239_fu_4679_p2 = (grp_fu_747_p2 + select_ln19_263_reg_7009);

assign add_ln703_23_fu_3528_p2 = (add_ln703_22_fu_3524_p2 + select_ln19_20_reg_6599);

assign add_ln703_240_fu_4711_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_270_fu_4700_p3);

assign add_ln703_241_fu_4729_p2 = (LB_V_0_load_reg_5639 + select_ln19_271_fu_4716_p3);

assign add_ln703_247_fu_4747_p2 = (grp_fu_747_p2 + select_ln19_272_reg_7019);

assign add_ln703_248_fu_4779_p2 = (WIN_V_0_2_load_reg_6481 + select_ln19_279_fu_4768_p3);

assign add_ln703_249_fu_4797_p2 = (LB_V_0_load_reg_5639 + select_ln19_280_fu_4784_p3);

assign add_ln703_24_fu_1897_p2 = (WIN_V_0_2 + select_ln19_27_fu_1884_p3);

assign add_ln703_255_fu_5219_p2 = (grp_fu_747_p2 + select_ln19_281_reg_7034);

assign add_ln703_25_fu_1915_p2 = (LB_V_0_load_reg_5639 + select_ln19_28_fu_1903_p3);

assign add_ln703_26_fu_1940_p2 = (WIN_V_1_2 + select_ln19_30_fu_1927_p3);

assign add_ln703_27_fu_1958_p2 = (LB_V_1_load_reg_5708 + select_ln19_31_fu_1946_p3);

assign add_ln703_28_fu_1983_p2 = (WIN_V_2_2 + select_ln19_33_fu_1970_p3);

assign add_ln703_29_fu_2001_p2 = (select_ln19_34_fu_1989_p3 + tmp_V_3_reg_5745);

assign add_ln703_2_fu_1546_p2 = (WIN_V_1_2 + select_ln19_3_fu_1533_p3);

assign add_ln703_30_fu_3545_p2 = (select_ln19_32_reg_6619 + select_ln19_35_reg_6624);

assign add_ln703_31_fu_3549_p2 = (add_ln703_30_fu_3545_p2 + select_ln19_29_reg_6614);

assign add_ln703_32_fu_2026_p2 = (WIN_V_0_2 + select_ln19_36_fu_2013_p3);

assign add_ln703_33_fu_2044_p2 = (LB_V_0_load_reg_5639 + select_ln19_37_fu_2032_p3);

assign add_ln703_34_fu_2069_p2 = (WIN_V_1_2 + select_ln19_39_fu_2056_p3);

assign add_ln703_35_fu_2087_p2 = (LB_V_1_load_reg_5708 + select_ln19_40_fu_2075_p3);

assign add_ln703_36_fu_2112_p2 = (WIN_V_2_2 + select_ln19_42_fu_2099_p3);

assign add_ln703_37_fu_2130_p2 = (select_ln19_43_fu_2118_p3 + tmp_V_3_reg_5745);

assign add_ln703_38_fu_3566_p2 = (select_ln19_41_reg_6634 + select_ln19_44_reg_6639);

assign add_ln703_39_fu_3570_p2 = (add_ln703_38_fu_3566_p2 + select_ln19_38_reg_6629);

assign add_ln703_3_fu_1564_p2 = (LB_V_1_load_reg_5708 + select_ln19_4_fu_1552_p3);

assign add_ln703_40_fu_2155_p2 = (WIN_V_0_2 + select_ln19_45_fu_2142_p3);

assign add_ln703_41_fu_2173_p2 = (LB_V_0_load_reg_5639 + select_ln19_46_fu_2161_p3);

assign add_ln703_42_fu_2198_p2 = (WIN_V_1_2 + select_ln19_48_fu_2185_p3);

assign add_ln703_43_fu_2216_p2 = (LB_V_1_load_reg_5708 + select_ln19_49_fu_2204_p3);

assign add_ln703_44_fu_2241_p2 = (WIN_V_2_2 + select_ln19_51_fu_2228_p3);

assign add_ln703_45_fu_2259_p2 = (select_ln19_52_fu_2247_p3 + tmp_V_3_reg_5745);

assign add_ln703_46_fu_3587_p2 = (select_ln19_50_reg_6649 + select_ln19_53_reg_6654);

assign add_ln703_47_fu_3591_p2 = (add_ln703_46_fu_3587_p2 + select_ln19_47_reg_6644);

assign add_ln703_48_fu_2284_p2 = (WIN_V_0_2 + select_ln19_54_fu_2271_p3);

assign add_ln703_49_fu_2302_p2 = (LB_V_0_load_reg_5639 + select_ln19_55_fu_2290_p3);

assign add_ln703_4_fu_1596_p2 = (WIN_V_2_2 + select_ln19_6_fu_1583_p3);

assign add_ln703_50_fu_2327_p2 = (WIN_V_1_2 + select_ln19_57_fu_2314_p3);

assign add_ln703_51_fu_2345_p2 = (LB_V_1_load_reg_5708 + select_ln19_58_fu_2333_p3);

assign add_ln703_52_fu_2370_p2 = (WIN_V_2_2 + select_ln19_60_fu_2357_p3);

assign add_ln703_53_fu_2388_p2 = (select_ln19_61_fu_2376_p3 + tmp_V_3_reg_5745);

assign add_ln703_54_fu_3608_p2 = (select_ln19_59_reg_6664 + select_ln19_62_reg_6669);

assign add_ln703_55_fu_3612_p2 = (add_ln703_54_fu_3608_p2 + select_ln19_56_reg_6659);

assign add_ln703_56_fu_2413_p2 = (WIN_V_0_2 + select_ln19_63_fu_2400_p3);

assign add_ln703_57_fu_2431_p2 = (LB_V_0_load_reg_5639 + select_ln19_64_fu_2419_p3);

assign add_ln703_58_fu_2456_p2 = (WIN_V_1_2 + select_ln19_66_fu_2443_p3);

assign add_ln703_59_fu_2474_p2 = (LB_V_1_load_reg_5708 + select_ln19_67_fu_2462_p3);

assign add_ln703_5_fu_1614_p2 = (select_ln19_7_fu_1602_p3 + tmp_V_3_reg_5745);

assign add_ln703_60_fu_2499_p2 = (WIN_V_2_2 + select_ln19_69_fu_2486_p3);

assign add_ln703_61_fu_2517_p2 = (select_ln19_70_fu_2505_p3 + tmp_V_3_reg_5745);

assign add_ln703_62_fu_3629_p2 = (select_ln19_68_reg_6679 + select_ln19_71_reg_6684);

assign add_ln703_63_fu_3633_p2 = (add_ln703_62_fu_3629_p2 + select_ln19_65_reg_6674);

assign add_ln703_64_fu_2542_p2 = (WIN_V_0_2 + select_ln19_72_fu_2529_p3);

assign add_ln703_65_fu_2560_p2 = (LB_V_0_load_reg_5639 + select_ln19_73_fu_2548_p3);

assign add_ln703_66_fu_2585_p2 = (WIN_V_1_2 + select_ln19_75_fu_2572_p3);

assign add_ln703_67_fu_2603_p2 = (LB_V_1_load_reg_5708 + select_ln19_76_fu_2591_p3);

assign add_ln703_68_fu_2628_p2 = (WIN_V_2_2 + select_ln19_78_fu_2615_p3);

assign add_ln703_69_fu_2646_p2 = (select_ln19_79_fu_2634_p3 + tmp_V_3_reg_5745);

assign add_ln703_6_fu_3482_p2 = (select_ln19_5_reg_6569 + select_ln19_8_reg_6579);

assign add_ln703_70_fu_3650_p2 = (select_ln19_77_reg_6694 + select_ln19_80_reg_6699);

assign add_ln703_71_fu_3654_p2 = (add_ln703_70_fu_3650_p2 + select_ln19_74_reg_6689);

assign add_ln703_72_fu_2671_p2 = (WIN_V_0_2 + select_ln19_81_fu_2658_p3);

assign add_ln703_73_fu_2689_p2 = (LB_V_0_load_reg_5639 + select_ln19_82_fu_2677_p3);

assign add_ln703_74_fu_2714_p2 = (WIN_V_1_2 + select_ln19_84_fu_2701_p3);

assign add_ln703_75_fu_2732_p2 = (LB_V_1_load_reg_5708 + select_ln19_85_fu_2720_p3);

assign add_ln703_76_fu_2757_p2 = (WIN_V_2_2 + select_ln19_87_fu_2744_p3);

assign add_ln703_77_fu_2775_p2 = (select_ln19_88_fu_2763_p3 + tmp_V_3_reg_5745);

assign add_ln703_78_fu_3671_p2 = (select_ln19_86_reg_6709 + select_ln19_89_reg_6714);

assign add_ln703_79_fu_3675_p2 = (add_ln703_78_fu_3671_p2 + select_ln19_83_reg_6704);

assign add_ln703_7_fu_3486_p2 = (add_ln703_6_fu_3482_p2 + select_ln19_2_reg_6559);

assign add_ln703_80_fu_2800_p2 = (WIN_V_0_2 + select_ln19_90_fu_2787_p3);

assign add_ln703_81_fu_2818_p2 = (LB_V_0_load_reg_5639 + select_ln19_91_fu_2806_p3);

assign add_ln703_82_fu_2843_p2 = (WIN_V_1_2 + select_ln19_93_fu_2830_p3);

assign add_ln703_83_fu_2861_p2 = (LB_V_1_load_reg_5708 + select_ln19_94_fu_2849_p3);

assign add_ln703_84_fu_2886_p2 = (WIN_V_2_2 + select_ln19_96_fu_2873_p3);

assign add_ln703_85_fu_2904_p2 = (select_ln19_97_fu_2892_p3 + tmp_V_3_reg_5745);

assign add_ln703_86_fu_3692_p2 = (select_ln19_95_reg_6724 + select_ln19_98_reg_6729);

assign add_ln703_87_fu_3696_p2 = (add_ln703_86_fu_3692_p2 + select_ln19_92_reg_6719);

assign add_ln703_88_fu_2929_p2 = (WIN_V_0_2 + select_ln19_99_fu_2916_p3);

assign add_ln703_89_fu_2947_p2 = (LB_V_0_load_reg_5639 + select_ln19_100_fu_2935_p3);

assign add_ln703_8_fu_1639_p2 = (WIN_V_0_2 + select_ln19_9_fu_1626_p3);

assign add_ln703_90_fu_2972_p2 = (WIN_V_1_2 + select_ln19_102_fu_2959_p3);

assign add_ln703_91_fu_2990_p2 = (LB_V_1_load_reg_5708 + select_ln19_103_fu_2978_p3);

assign add_ln703_92_fu_3015_p2 = (WIN_V_2_2 + select_ln19_105_fu_3002_p3);

assign add_ln703_93_fu_3033_p2 = (select_ln19_106_fu_3021_p3 + tmp_V_3_reg_5745);

assign add_ln703_94_fu_3713_p2 = (select_ln19_104_reg_6739 + select_ln19_107_reg_6744);

assign add_ln703_95_fu_3717_p2 = (add_ln703_94_fu_3713_p2 + select_ln19_101_reg_6734);

assign add_ln703_96_fu_3058_p2 = (WIN_V_0_2 + select_ln19_108_fu_3045_p3);

assign add_ln703_97_fu_3076_p2 = (LB_V_0_load_reg_5639 + select_ln19_109_fu_3064_p3);

assign add_ln703_98_fu_3101_p2 = (WIN_V_1_2 + select_ln19_111_fu_3088_p3);

assign add_ln703_99_fu_3119_p2 = (LB_V_1_load_reg_5708 + select_ln19_112_fu_3107_p3);

assign add_ln703_9_fu_1657_p2 = (LB_V_0_load_reg_5639 + select_ln19_10_fu_1645_p3);

assign add_ln703_fu_1496_p2 = (WIN_V_0_2 + select_ln19_fu_1483_p3);

assign add_ln75_1_fu_1009_p2 = (6'd1 + ap_phi_mux_r_0_phi_fu_433_p4);

assign add_ln75_fu_989_p2 = (ap_phi_mux_indvar_flatten_phi_fu_422_p4 + 11'd1);

assign and_ln168_fu_1353_p2 = (select_ln168_1_reg_5295 & icmp_ln168_2_fu_1347_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln75_reg_5279 == 1'd0) & (axi_input_V_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (axi_input_V_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b1 == ap_block_state38_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln75_reg_5279 == 1'd0) & (axi_input_V_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((ap_predicate_op60_read_state2 == 1'b1) & (weight_input_V_V_0_vld_out == 1'b0));
end

assign ap_block_state20_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state38_io = ((1'd1 == and_ln168_reg_5827) & (axi_output_V_V_1_ack_in == 1'b0));
end

assign ap_block_state38_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_io = ((1'd1 == and_ln168_reg_5827_pp0_iter1_reg) & (axi_output_V_V_1_ack_in == 1'b0));
end

assign ap_block_state39_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40 = ((axi_output_V_V_1_state == 2'd1) | ((axi_output_V_V_1_state == 2'd3) & (axi_output_V_V_TREADY == 1'b0)));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage1_iter0 = ((icmp_ln75_reg_5279 == 1'd0) & (axi_input_V_V_0_vld_out == 1'b0));
end

assign ap_block_state7_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_672 = ((icmp_ln75_fu_983_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op60_read_state2 = ((interrupt_flag_V_rea_reg_5256 == 1'd1) & (icmp_ln64_fu_753_p2 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign axi_input_V_V_0_ack_in = axi_input_V_V_0_state[1'd1];

assign axi_input_V_V_0_load_A = (~axi_input_V_V_0_sel_wr & axi_input_V_V_0_state_cmp_full);

assign axi_input_V_V_0_load_B = (axi_input_V_V_0_state_cmp_full & axi_input_V_V_0_sel_wr);

assign axi_input_V_V_0_sel = axi_input_V_V_0_sel_rd;

assign axi_input_V_V_0_state_cmp_full = ((axi_input_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign axi_input_V_V_0_vld_in = axi_input_V_V_TVALID;

assign axi_input_V_V_0_vld_out = axi_input_V_V_0_state[1'd0];

assign axi_input_V_V_TREADY = axi_input_V_V_0_state[1'd1];

assign axi_output_V_V_1_ack_in = axi_output_V_V_1_state[1'd1];

assign axi_output_V_V_1_ack_out = axi_output_V_V_TREADY;

assign axi_output_V_V_1_load_A = (~axi_output_V_V_1_sel_wr & axi_output_V_V_1_state_cmp_full);

assign axi_output_V_V_1_load_B = (axi_output_V_V_1_state_cmp_full & axi_output_V_V_1_sel_wr);

assign axi_output_V_V_1_sel = axi_output_V_V_1_sel_rd;

assign axi_output_V_V_1_state_cmp_full = ((axi_output_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign axi_output_V_V_1_vld_out = axi_output_V_V_1_state[1'd0];

assign axi_output_V_V_TDATA = axi_output_V_V_1_data_out;

assign axi_output_V_V_TVALID = axi_output_V_V_1_state[1'd0];

assign c_fu_4742_p2 = (select_ln168_reg_5288 + 6'd1);

assign f_fu_759_p2 = (f_0_reg_407 + 6'd1);

assign grp_fu_591_p3 = FILTER_WEIGHT_V_q0[32'd1];

assign grp_fu_599_p3 = FILTER_WEIGHT_V_q0[32'd2];

assign grp_fu_607_p3 = FILTER_WEIGHT_V_q0[32'd3];

assign grp_fu_615_p3 = FILTER_WEIGHT_V_q0[32'd4];

assign grp_fu_623_p3 = FILTER_WEIGHT_V_q0[32'd5];

assign grp_fu_631_p3 = FILTER_WEIGHT_V_q0[32'd6];

assign grp_fu_639_p3 = FILTER_WEIGHT_V_q0[32'd7];

assign grp_fu_647_p3 = FILTER_WEIGHT_V_q0[32'd8];

assign grp_fu_655_p3 = ((grp_fu_607_p3[0:0] === 1'b1) ? grp_fu_655_p1 : grp_fu_655_p2);

assign grp_fu_661_p2 = (grp_fu_655_p3 - grp_fu_661_p1);

assign grp_fu_666_p2 = (grp_fu_666_p0 + grp_fu_655_p3);

assign grp_fu_671_p3 = ((grp_fu_615_p3[0:0] === 1'b1) ? grp_fu_666_p2 : grp_fu_661_p2);

assign grp_fu_679_p2 = (grp_fu_671_p3 - LB_V_1_load_reg_5708);

assign grp_fu_684_p2 = (LB_V_1_load_reg_5708 + grp_fu_671_p3);

assign grp_fu_689_p3 = ((grp_fu_623_p3[0:0] === 1'b1) ? grp_fu_684_p2 : grp_fu_679_p2);

assign grp_fu_697_p3 = ((grp_fu_631_p3[0:0] === 1'b1) ? grp_fu_697_p1 : grp_fu_697_p2);

assign grp_fu_703_p2 = (grp_fu_697_p3 - grp_fu_703_p1);

assign grp_fu_708_p2 = (grp_fu_708_p0 + grp_fu_697_p3);

assign grp_fu_713_p3 = ((grp_fu_639_p3[0:0] === 1'b1) ? grp_fu_708_p2 : grp_fu_703_p2);

assign grp_fu_721_p2 = (grp_fu_713_p3 - tmp_V_3_reg_5745);

assign grp_fu_726_p2 = (grp_fu_713_p3 + tmp_V_3_reg_5745);

assign grp_fu_731_p3 = ((grp_fu_647_p3[0:0] === 1'b1) ? grp_fu_726_p2 : grp_fu_721_p2);

assign grp_fu_747_p2 = (reg_739 + reg_743);

assign icmp_ln1496_10_fu_3701_p2 = (($signed(add_ln703_87_fu_3696_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_3722_p2 = (($signed(add_ln703_95_fu_3717_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_12_fu_3743_p2 = (($signed(add_ln703_103_fu_3738_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_13_fu_3764_p2 = (($signed(add_ln703_111_fu_3759_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_14_fu_3785_p2 = (($signed(add_ln703_119_fu_3780_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_15_fu_3802_p2 = (($signed(add_ln703_127_fu_3797_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_16_fu_3865_p2 = (($signed(add_ln703_135_fu_3860_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_17_fu_3928_p2 = (($signed(add_ln703_143_fu_3923_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_18_fu_3991_p2 = (($signed(add_ln703_151_fu_3986_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_19_fu_4054_p2 = (($signed(add_ln703_159_fu_4049_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_3512_p2 = (($signed(add_ln703_15_fu_3507_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_20_fu_4117_p2 = (($signed(add_ln703_167_fu_4112_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_21_fu_4180_p2 = (($signed(add_ln703_175_fu_4175_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_22_fu_4243_p2 = (($signed(add_ln703_183_fu_4238_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_23_fu_4306_p2 = (($signed(add_ln703_191_fu_4301_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_24_fu_4369_p2 = (($signed(add_ln703_199_fu_4364_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_25_fu_4432_p2 = (($signed(add_ln703_207_fu_4427_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_26_fu_4495_p2 = (($signed(add_ln703_215_fu_4490_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_27_fu_4558_p2 = (($signed(add_ln703_223_fu_4553_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_28_fu_4621_p2 = (($signed(add_ln703_231_fu_4616_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_29_fu_4684_p2 = (($signed(add_ln703_239_fu_4679_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_3533_p2 = (($signed(add_ln703_23_fu_3528_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_30_fu_4752_p2 = (($signed(add_ln703_247_fu_4747_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_31_fu_5224_p2 = (($signed(add_ln703_255_fu_5219_p2) < $signed(UnifiedRetVal_i69_reg_521)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_3554_p2 = (($signed(add_ln703_31_fu_3549_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_3575_p2 = (($signed(add_ln703_39_fu_3570_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_3596_p2 = (($signed(add_ln703_47_fu_3591_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_3617_p2 = (($signed(add_ln703_55_fu_3612_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_3638_p2 = (($signed(add_ln703_63_fu_3633_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_3659_p2 = (($signed(add_ln703_71_fu_3654_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_3680_p2 = (($signed(add_ln703_79_fu_3675_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_3491_p2 = (($signed(add_ln703_7_fu_3486_p2) < $signed(UnifiedRetVal_i_reg_451)) ? 1'b1 : 1'b0);

assign icmp_ln168_1_fu_1041_p2 = ((tmp_2_fu_1031_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln168_2_fu_1347_p2 = ((tmp_291_fu_1338_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_1025_p2 = ((tmp_1_fu_1015_p4 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_753_p2 = ((f_0_reg_407 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_983_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_422_p4 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_995_p2 = ((ap_phi_mux_bvh_d_index_phi_fu_444_p4 == 6'd32) ? 1'b1 : 1'b0);

assign interrupt_flag_V_rea_read_fu_310_p2 = interrupt_flag_V;

assign select_ln168_1_fu_1047_p3 = ((icmp_ln77_fu_995_p2[0:0] === 1'b1) ? icmp_ln168_fu_1025_p2 : icmp_ln168_1_fu_1041_p2);

assign select_ln168_fu_1001_p3 = ((icmp_ln77_fu_995_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_bvh_d_index_phi_fu_444_p4);

assign select_ln19_100_fu_2935_p3 = ((tmp_102_reg_6286[0:0] === 1'b1) ? add_ln703_88_fu_2929_p2 : sub_ln703_69_fu_2923_p2);

assign select_ln19_101_fu_2952_p3 = ((tmp_103_reg_6291[0:0] === 1'b1) ? add_ln703_89_fu_2947_p2 : sub_ln703_70_fu_2942_p2);

assign select_ln19_102_fu_2959_p3 = ((tmp_104_reg_6296[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_103_fu_2978_p3 = ((tmp_105_reg_6301[0:0] === 1'b1) ? add_ln703_90_fu_2972_p2 : sub_ln703_71_fu_2966_p2);

assign select_ln19_104_fu_2995_p3 = ((tmp_106_reg_6306[0:0] === 1'b1) ? add_ln703_91_fu_2990_p2 : sub_ln703_72_fu_2985_p2);

assign select_ln19_105_fu_3002_p3 = ((tmp_107_reg_6311[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_106_fu_3021_p3 = ((tmp_108_reg_6316[0:0] === 1'b1) ? add_ln703_92_fu_3015_p2 : sub_ln703_73_fu_3009_p2);

assign select_ln19_107_fu_3038_p3 = ((tmp_109_reg_6321[0:0] === 1'b1) ? add_ln703_93_fu_3033_p2 : sub_ln703_74_fu_3028_p2);

assign select_ln19_108_fu_3045_p3 = ((trunc_ln791_12_reg_6326[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_109_fu_3064_p3 = ((tmp_111_reg_6331[0:0] === 1'b1) ? add_ln703_96_fu_3058_p2 : sub_ln703_75_fu_3052_p2);

assign select_ln19_10_fu_1645_p3 = ((tmp_12_reg_5836[0:0] === 1'b1) ? add_ln703_8_fu_1639_p2 : sub_ln703_9_fu_1633_p2);

assign select_ln19_110_fu_3081_p3 = ((tmp_112_reg_6336[0:0] === 1'b1) ? add_ln703_97_fu_3076_p2 : sub_ln703_76_fu_3071_p2);

assign select_ln19_111_fu_3088_p3 = ((tmp_113_reg_6341[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_112_fu_3107_p3 = ((tmp_114_reg_6346[0:0] === 1'b1) ? add_ln703_98_fu_3101_p2 : sub_ln703_77_fu_3095_p2);

assign select_ln19_113_fu_3124_p3 = ((tmp_115_reg_6351[0:0] === 1'b1) ? add_ln703_99_fu_3119_p2 : sub_ln703_78_fu_3114_p2);

assign select_ln19_114_fu_3131_p3 = ((tmp_116_reg_6356[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_115_fu_3150_p3 = ((tmp_117_reg_6361[0:0] === 1'b1) ? add_ln703_100_fu_3144_p2 : sub_ln703_79_fu_3138_p2);

assign select_ln19_116_fu_3167_p3 = ((tmp_118_reg_6366[0:0] === 1'b1) ? add_ln703_101_fu_3162_p2 : sub_ln703_80_fu_3157_p2);

assign select_ln19_117_fu_3174_p3 = ((trunc_ln791_13_reg_6371[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_118_fu_3193_p3 = ((tmp_120_reg_6376[0:0] === 1'b1) ? add_ln703_104_fu_3187_p2 : sub_ln703_81_fu_3181_p2);

assign select_ln19_119_fu_3210_p3 = ((tmp_121_reg_6381[0:0] === 1'b1) ? add_ln703_105_fu_3205_p2 : sub_ln703_82_fu_3200_p2);

assign select_ln19_11_fu_1662_p3 = ((tmp_13_reg_5841[0:0] === 1'b1) ? add_ln703_9_fu_1657_p2 : sub_ln703_10_fu_1652_p2);

assign select_ln19_120_fu_3217_p3 = ((tmp_122_reg_6386[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_121_fu_3236_p3 = ((tmp_123_reg_6391[0:0] === 1'b1) ? add_ln703_106_fu_3230_p2 : sub_ln703_83_fu_3224_p2);

assign select_ln19_122_fu_3253_p3 = ((tmp_124_reg_6396[0:0] === 1'b1) ? add_ln703_107_fu_3248_p2 : sub_ln703_84_fu_3243_p2);

assign select_ln19_123_fu_3260_p3 = ((tmp_125_reg_6401[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_124_fu_3279_p3 = ((tmp_126_reg_6406[0:0] === 1'b1) ? add_ln703_108_fu_3273_p2 : sub_ln703_85_fu_3267_p2);

assign select_ln19_125_fu_3296_p3 = ((tmp_127_reg_6411[0:0] === 1'b1) ? add_ln703_109_fu_3291_p2 : sub_ln703_86_fu_3286_p2);

assign select_ln19_126_fu_3303_p3 = ((trunc_ln791_14_reg_6416[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_127_fu_3322_p3 = ((tmp_129_reg_6421[0:0] === 1'b1) ? add_ln703_112_fu_3316_p2 : sub_ln703_87_fu_3310_p2);

assign select_ln19_128_fu_3339_p3 = ((tmp_130_reg_6426[0:0] === 1'b1) ? add_ln703_113_fu_3334_p2 : sub_ln703_88_fu_3329_p2);

assign select_ln19_129_fu_3346_p3 = ((tmp_131_reg_6431[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_12_fu_1669_p3 = ((tmp_14_reg_5846[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_130_fu_3365_p3 = ((tmp_132_reg_6436[0:0] === 1'b1) ? add_ln703_114_fu_3359_p2 : sub_ln703_89_fu_3353_p2);

assign select_ln19_131_fu_3382_p3 = ((tmp_133_reg_6441[0:0] === 1'b1) ? add_ln703_115_fu_3377_p2 : sub_ln703_90_fu_3372_p2);

assign select_ln19_132_fu_3389_p3 = ((tmp_134_reg_6446[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_133_fu_3408_p3 = ((tmp_135_reg_6451[0:0] === 1'b1) ? add_ln703_116_fu_3402_p2 : sub_ln703_91_fu_3396_p2);

assign select_ln19_134_fu_3425_p3 = ((tmp_136_reg_6456[0:0] === 1'b1) ? add_ln703_117_fu_3420_p2 : sub_ln703_92_fu_3415_p2);

assign select_ln19_135_fu_3436_p3 = ((trunc_ln791_15_fu_3432_p1[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_136_fu_3456_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_120_fu_3450_p2 : sub_ln703_93_fu_3444_p2);

assign select_ln19_137_fu_3474_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_121_fu_3469_p2 : sub_ln703_94_fu_3464_p2);

assign select_ln19_13_fu_1688_p3 = ((tmp_15_reg_5851[0:0] === 1'b1) ? add_ln703_10_fu_1682_p2 : sub_ln703_11_fu_1676_p2);

assign select_ln19_144_fu_3818_p3 = ((trunc_ln791_16_fu_3814_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_145_fu_3834_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_128_fu_3829_p2 : sub_ln703_99_fu_3824_p2);

assign select_ln19_146_fu_3852_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_129_fu_3847_p2 : sub_ln703_100_fu_3842_p2);

assign select_ln19_14_fu_1705_p3 = ((tmp_16_reg_5856[0:0] === 1'b1) ? add_ln703_11_fu_1700_p2 : sub_ln703_12_fu_1695_p2);

assign select_ln19_153_fu_3881_p3 = ((trunc_ln791_17_fu_3877_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_154_fu_3897_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_136_fu_3892_p2 : sub_ln703_105_fu_3887_p2);

assign select_ln19_155_fu_3915_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_137_fu_3910_p2 : sub_ln703_106_fu_3905_p2);

assign select_ln19_15_fu_1712_p3 = ((tmp_17_reg_5861[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_162_fu_3944_p3 = ((trunc_ln791_18_fu_3940_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_163_fu_3960_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_144_fu_3955_p2 : sub_ln703_111_fu_3950_p2);

assign select_ln19_164_fu_3978_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_145_fu_3973_p2 : sub_ln703_112_fu_3968_p2);

assign select_ln19_16_fu_1731_p3 = ((tmp_18_reg_5866[0:0] === 1'b1) ? add_ln703_12_fu_1725_p2 : sub_ln703_13_fu_1719_p2);

assign select_ln19_171_fu_4007_p3 = ((trunc_ln791_19_fu_4003_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_172_fu_4023_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_152_fu_4018_p2 : sub_ln703_117_fu_4013_p2);

assign select_ln19_173_fu_4041_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_153_fu_4036_p2 : sub_ln703_118_fu_4031_p2);

assign select_ln19_17_fu_1748_p3 = ((tmp_19_reg_5871[0:0] === 1'b1) ? add_ln703_13_fu_1743_p2 : sub_ln703_14_fu_1738_p2);

assign select_ln19_180_fu_4070_p3 = ((trunc_ln791_20_fu_4066_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_181_fu_4086_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_160_fu_4081_p2 : sub_ln703_123_fu_4076_p2);

assign select_ln19_182_fu_4104_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_161_fu_4099_p2 : sub_ln703_124_fu_4094_p2);

assign select_ln19_189_fu_4133_p3 = ((trunc_ln791_21_fu_4129_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_18_fu_1755_p3 = ((trunc_ln791_2_reg_5876[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_190_fu_4149_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_168_fu_4144_p2 : sub_ln703_129_fu_4139_p2);

assign select_ln19_191_fu_4167_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_169_fu_4162_p2 : sub_ln703_130_fu_4157_p2);

assign select_ln19_198_fu_4196_p3 = ((trunc_ln791_22_fu_4192_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_199_fu_4212_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_176_fu_4207_p2 : sub_ln703_135_fu_4202_p2);

assign select_ln19_19_fu_1774_p3 = ((tmp_21_reg_5881[0:0] === 1'b1) ? add_ln703_16_fu_1768_p2 : sub_ln703_15_fu_1762_p2);

assign select_ln19_1_fu_1502_p3 = ((tmp_3_reg_5787[0:0] === 1'b1) ? add_ln703_fu_1496_p2 : sub_ln703_1_fu_1490_p2);

assign select_ln19_200_fu_4230_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_177_fu_4225_p2 : sub_ln703_136_fu_4220_p2);

assign select_ln19_207_fu_4259_p3 = ((trunc_ln791_23_fu_4255_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_208_fu_4275_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_184_fu_4270_p2 : sub_ln703_141_fu_4265_p2);

assign select_ln19_209_fu_4293_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_185_fu_4288_p2 : sub_ln703_142_fu_4283_p2);

assign select_ln19_20_fu_1791_p3 = ((tmp_22_reg_5886[0:0] === 1'b1) ? add_ln703_17_fu_1786_p2 : sub_ln703_16_fu_1781_p2);

assign select_ln19_216_fu_4322_p3 = ((trunc_ln791_24_fu_4318_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_217_fu_4338_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_192_fu_4333_p2 : sub_ln703_147_fu_4328_p2);

assign select_ln19_218_fu_4356_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_193_fu_4351_p2 : sub_ln703_148_fu_4346_p2);

assign select_ln19_21_fu_1798_p3 = ((tmp_23_reg_5891[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_225_fu_4385_p3 = ((trunc_ln791_25_fu_4381_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_226_fu_4401_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_200_fu_4396_p2 : sub_ln703_153_fu_4391_p2);

assign select_ln19_227_fu_4419_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_201_fu_4414_p2 : sub_ln703_154_fu_4409_p2);

assign select_ln19_22_fu_1817_p3 = ((tmp_24_reg_5896[0:0] === 1'b1) ? add_ln703_18_fu_1811_p2 : sub_ln703_17_fu_1805_p2);

assign select_ln19_234_fu_4448_p3 = ((trunc_ln791_26_fu_4444_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_235_fu_4464_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_208_fu_4459_p2 : sub_ln703_159_fu_4454_p2);

assign select_ln19_236_fu_4482_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_209_fu_4477_p2 : sub_ln703_160_fu_4472_p2);

assign select_ln19_23_fu_1834_p3 = ((tmp_25_reg_5901[0:0] === 1'b1) ? add_ln703_19_fu_1829_p2 : sub_ln703_18_fu_1824_p2);

assign select_ln19_243_fu_4511_p3 = ((trunc_ln791_27_fu_4507_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_244_fu_4527_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_216_fu_4522_p2 : sub_ln703_165_fu_4517_p2);

assign select_ln19_245_fu_4545_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_217_fu_4540_p2 : sub_ln703_166_fu_4535_p2);

assign select_ln19_24_fu_1841_p3 = ((tmp_26_reg_5906[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_252_fu_4574_p3 = ((trunc_ln791_28_fu_4570_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_253_fu_4590_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_224_fu_4585_p2 : sub_ln703_171_fu_4580_p2);

assign select_ln19_254_fu_4608_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_225_fu_4603_p2 : sub_ln703_172_fu_4598_p2);

assign select_ln19_25_fu_1860_p3 = ((tmp_27_reg_5911[0:0] === 1'b1) ? add_ln703_20_fu_1854_p2 : sub_ln703_19_fu_1848_p2);

assign select_ln19_261_fu_4637_p3 = ((trunc_ln791_29_fu_4633_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_262_fu_4653_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_232_fu_4648_p2 : sub_ln703_177_fu_4643_p2);

assign select_ln19_263_fu_4671_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_233_fu_4666_p2 : sub_ln703_178_fu_4661_p2);

assign select_ln19_26_fu_1877_p3 = ((tmp_28_reg_5916[0:0] === 1'b1) ? add_ln703_21_fu_1872_p2 : sub_ln703_20_fu_1867_p2);

assign select_ln19_270_fu_4700_p3 = ((trunc_ln791_30_fu_4696_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_271_fu_4716_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_240_fu_4711_p2 : sub_ln703_183_fu_4706_p2);

assign select_ln19_272_fu_4734_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_241_fu_4729_p2 : sub_ln703_184_fu_4724_p2);

assign select_ln19_279_fu_4768_p3 = ((trunc_ln791_31_fu_4764_p1[0:0] === 1'b1) ? WIN_V_0_1_load_reg_6461 : sub_ln703_reg_6539);

assign select_ln19_27_fu_1884_p3 = ((trunc_ln791_3_reg_5921[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_280_fu_4784_p3 = ((grp_fu_591_p3[0:0] === 1'b1) ? add_ln703_248_fu_4779_p2 : sub_ln703_189_fu_4774_p2);

assign select_ln19_281_fu_4802_p3 = ((grp_fu_599_p3[0:0] === 1'b1) ? add_ln703_249_fu_4797_p2 : sub_ln703_190_fu_4792_p2);

assign select_ln19_28_fu_1903_p3 = ((tmp_30_reg_5926[0:0] === 1'b1) ? add_ln703_24_fu_1897_p2 : sub_ln703_21_fu_1891_p2);

assign select_ln19_29_fu_1920_p3 = ((tmp_31_reg_5931[0:0] === 1'b1) ? add_ln703_25_fu_1915_p2 : sub_ln703_22_fu_1910_p2);

assign select_ln19_2_fu_1519_p3 = ((tmp_4_reg_5792[0:0] === 1'b1) ? add_ln703_1_fu_1514_p2 : sub_ln703_2_fu_1509_p2);

assign select_ln19_30_fu_1927_p3 = ((tmp_32_reg_5936[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_31_fu_1946_p3 = ((tmp_33_reg_5941[0:0] === 1'b1) ? add_ln703_26_fu_1940_p2 : sub_ln703_23_fu_1934_p2);

assign select_ln19_32_fu_1963_p3 = ((tmp_34_reg_5946[0:0] === 1'b1) ? add_ln703_27_fu_1958_p2 : sub_ln703_24_fu_1953_p2);

assign select_ln19_33_fu_1970_p3 = ((tmp_35_reg_5951[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_34_fu_1989_p3 = ((tmp_36_reg_5956[0:0] === 1'b1) ? add_ln703_28_fu_1983_p2 : sub_ln703_25_fu_1977_p2);

assign select_ln19_35_fu_2006_p3 = ((tmp_37_reg_5961[0:0] === 1'b1) ? add_ln703_29_fu_2001_p2 : sub_ln703_26_fu_1996_p2);

assign select_ln19_36_fu_2013_p3 = ((trunc_ln791_4_reg_5966[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_37_fu_2032_p3 = ((tmp_39_reg_5971[0:0] === 1'b1) ? add_ln703_32_fu_2026_p2 : sub_ln703_27_fu_2020_p2);

assign select_ln19_38_fu_2049_p3 = ((tmp_40_reg_5976[0:0] === 1'b1) ? add_ln703_33_fu_2044_p2 : sub_ln703_28_fu_2039_p2);

assign select_ln19_39_fu_2056_p3 = ((tmp_41_reg_5981[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_3_fu_1533_p3 = ((tmp_5_reg_5797[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_40_fu_2075_p3 = ((tmp_42_reg_5986[0:0] === 1'b1) ? add_ln703_34_fu_2069_p2 : sub_ln703_29_fu_2063_p2);

assign select_ln19_41_fu_2092_p3 = ((tmp_43_reg_5991[0:0] === 1'b1) ? add_ln703_35_fu_2087_p2 : sub_ln703_30_fu_2082_p2);

assign select_ln19_42_fu_2099_p3 = ((tmp_44_reg_5996[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_43_fu_2118_p3 = ((tmp_45_reg_6001[0:0] === 1'b1) ? add_ln703_36_fu_2112_p2 : sub_ln703_31_fu_2106_p2);

assign select_ln19_44_fu_2135_p3 = ((tmp_46_reg_6006[0:0] === 1'b1) ? add_ln703_37_fu_2130_p2 : sub_ln703_32_fu_2125_p2);

assign select_ln19_45_fu_2142_p3 = ((trunc_ln791_5_reg_6011[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_46_fu_2161_p3 = ((tmp_48_reg_6016[0:0] === 1'b1) ? add_ln703_40_fu_2155_p2 : sub_ln703_33_fu_2149_p2);

assign select_ln19_47_fu_2178_p3 = ((tmp_49_reg_6021[0:0] === 1'b1) ? add_ln703_41_fu_2173_p2 : sub_ln703_34_fu_2168_p2);

assign select_ln19_48_fu_2185_p3 = ((tmp_50_reg_6026[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_49_fu_2204_p3 = ((tmp_51_reg_6031[0:0] === 1'b1) ? add_ln703_42_fu_2198_p2 : sub_ln703_35_fu_2192_p2);

assign select_ln19_4_fu_1552_p3 = ((tmp_6_reg_5802[0:0] === 1'b1) ? add_ln703_2_fu_1546_p2 : sub_ln703_4_fu_1540_p2);

assign select_ln19_50_fu_2221_p3 = ((tmp_52_reg_6036[0:0] === 1'b1) ? add_ln703_43_fu_2216_p2 : sub_ln703_36_fu_2211_p2);

assign select_ln19_51_fu_2228_p3 = ((tmp_53_reg_6041[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_52_fu_2247_p3 = ((tmp_54_reg_6046[0:0] === 1'b1) ? add_ln703_44_fu_2241_p2 : sub_ln703_37_fu_2235_p2);

assign select_ln19_53_fu_2264_p3 = ((tmp_55_reg_6051[0:0] === 1'b1) ? add_ln703_45_fu_2259_p2 : sub_ln703_38_fu_2254_p2);

assign select_ln19_54_fu_2271_p3 = ((trunc_ln791_6_reg_6056[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_55_fu_2290_p3 = ((tmp_57_reg_6061[0:0] === 1'b1) ? add_ln703_48_fu_2284_p2 : sub_ln703_39_fu_2278_p2);

assign select_ln19_56_fu_2307_p3 = ((tmp_58_reg_6066[0:0] === 1'b1) ? add_ln703_49_fu_2302_p2 : sub_ln703_40_fu_2297_p2);

assign select_ln19_57_fu_2314_p3 = ((tmp_59_reg_6071[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_58_fu_2333_p3 = ((tmp_60_reg_6076[0:0] === 1'b1) ? add_ln703_50_fu_2327_p2 : sub_ln703_41_fu_2321_p2);

assign select_ln19_59_fu_2350_p3 = ((tmp_61_reg_6081[0:0] === 1'b1) ? add_ln703_51_fu_2345_p2 : sub_ln703_42_fu_2340_p2);

assign select_ln19_5_fu_1569_p3 = ((tmp_7_reg_5807[0:0] === 1'b1) ? add_ln703_3_fu_1564_p2 : sub_ln703_5_fu_1559_p2);

assign select_ln19_60_fu_2357_p3 = ((tmp_62_reg_6086[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_61_fu_2376_p3 = ((tmp_63_reg_6091[0:0] === 1'b1) ? add_ln703_52_fu_2370_p2 : sub_ln703_43_fu_2364_p2);

assign select_ln19_62_fu_2393_p3 = ((tmp_64_reg_6096[0:0] === 1'b1) ? add_ln703_53_fu_2388_p2 : sub_ln703_44_fu_2383_p2);

assign select_ln19_63_fu_2400_p3 = ((trunc_ln791_7_reg_6101[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_64_fu_2419_p3 = ((tmp_66_reg_6106[0:0] === 1'b1) ? add_ln703_56_fu_2413_p2 : sub_ln703_45_fu_2407_p2);

assign select_ln19_65_fu_2436_p3 = ((tmp_67_reg_6111[0:0] === 1'b1) ? add_ln703_57_fu_2431_p2 : sub_ln703_46_fu_2426_p2);

assign select_ln19_66_fu_2443_p3 = ((tmp_68_reg_6116[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_67_fu_2462_p3 = ((tmp_69_reg_6121[0:0] === 1'b1) ? add_ln703_58_fu_2456_p2 : sub_ln703_47_fu_2450_p2);

assign select_ln19_68_fu_2479_p3 = ((tmp_70_reg_6126[0:0] === 1'b1) ? add_ln703_59_fu_2474_p2 : sub_ln703_48_fu_2469_p2);

assign select_ln19_69_fu_2486_p3 = ((tmp_71_reg_6131[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_6_fu_1583_p3 = ((tmp_8_reg_5812[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_70_fu_2505_p3 = ((tmp_72_reg_6136[0:0] === 1'b1) ? add_ln703_60_fu_2499_p2 : sub_ln703_49_fu_2493_p2);

assign select_ln19_71_fu_2522_p3 = ((tmp_73_reg_6141[0:0] === 1'b1) ? add_ln703_61_fu_2517_p2 : sub_ln703_50_fu_2512_p2);

assign select_ln19_72_fu_2529_p3 = ((trunc_ln791_8_reg_6146[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_73_fu_2548_p3 = ((tmp_75_reg_6151[0:0] === 1'b1) ? add_ln703_64_fu_2542_p2 : sub_ln703_51_fu_2536_p2);

assign select_ln19_74_fu_2565_p3 = ((tmp_76_reg_6156[0:0] === 1'b1) ? add_ln703_65_fu_2560_p2 : sub_ln703_52_fu_2555_p2);

assign select_ln19_75_fu_2572_p3 = ((tmp_77_reg_6161[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_76_fu_2591_p3 = ((tmp_78_reg_6166[0:0] === 1'b1) ? add_ln703_66_fu_2585_p2 : sub_ln703_53_fu_2579_p2);

assign select_ln19_77_fu_2608_p3 = ((tmp_79_reg_6171[0:0] === 1'b1) ? add_ln703_67_fu_2603_p2 : sub_ln703_54_fu_2598_p2);

assign select_ln19_78_fu_2615_p3 = ((tmp_80_reg_6176[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_79_fu_2634_p3 = ((tmp_81_reg_6181[0:0] === 1'b1) ? add_ln703_68_fu_2628_p2 : sub_ln703_55_fu_2622_p2);

assign select_ln19_7_fu_1602_p3 = ((tmp_9_reg_5817[0:0] === 1'b1) ? add_ln703_4_fu_1596_p2 : sub_ln703_7_fu_1590_p2);

assign select_ln19_80_fu_2651_p3 = ((tmp_82_reg_6186[0:0] === 1'b1) ? add_ln703_69_fu_2646_p2 : sub_ln703_56_fu_2641_p2);

assign select_ln19_81_fu_2658_p3 = ((trunc_ln791_9_reg_6191[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_82_fu_2677_p3 = ((tmp_84_reg_6196[0:0] === 1'b1) ? add_ln703_72_fu_2671_p2 : sub_ln703_57_fu_2665_p2);

assign select_ln19_83_fu_2694_p3 = ((tmp_85_reg_6201[0:0] === 1'b1) ? add_ln703_73_fu_2689_p2 : sub_ln703_58_fu_2684_p2);

assign select_ln19_84_fu_2701_p3 = ((tmp_86_reg_6206[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_85_fu_2720_p3 = ((tmp_87_reg_6211[0:0] === 1'b1) ? add_ln703_74_fu_2714_p2 : sub_ln703_59_fu_2708_p2);

assign select_ln19_86_fu_2737_p3 = ((tmp_88_reg_6216[0:0] === 1'b1) ? add_ln703_75_fu_2732_p2 : sub_ln703_60_fu_2727_p2);

assign select_ln19_87_fu_2744_p3 = ((tmp_89_reg_6221[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_88_fu_2763_p3 = ((tmp_90_reg_6226[0:0] === 1'b1) ? add_ln703_76_fu_2757_p2 : sub_ln703_61_fu_2751_p2);

assign select_ln19_89_fu_2780_p3 = ((tmp_91_reg_6231[0:0] === 1'b1) ? add_ln703_77_fu_2775_p2 : sub_ln703_62_fu_2770_p2);

assign select_ln19_8_fu_1619_p3 = ((tmp_10_reg_5822[0:0] === 1'b1) ? add_ln703_5_fu_1614_p2 : sub_ln703_8_fu_1609_p2);

assign select_ln19_90_fu_2787_p3 = ((trunc_ln791_10_reg_6236[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_91_fu_2806_p3 = ((tmp_93_reg_6241[0:0] === 1'b1) ? add_ln703_80_fu_2800_p2 : sub_ln703_63_fu_2794_p2);

assign select_ln19_92_fu_2823_p3 = ((tmp_94_reg_6246[0:0] === 1'b1) ? add_ln703_81_fu_2818_p2 : sub_ln703_64_fu_2813_p2);

assign select_ln19_93_fu_2830_p3 = ((tmp_95_reg_6251[0:0] === 1'b1) ? WIN_V_1_1 : sub_ln703_3_fu_1526_p2);

assign select_ln19_94_fu_2849_p3 = ((tmp_96_reg_6256[0:0] === 1'b1) ? add_ln703_82_fu_2843_p2 : sub_ln703_65_fu_2837_p2);

assign select_ln19_95_fu_2866_p3 = ((tmp_97_reg_6261[0:0] === 1'b1) ? add_ln703_83_fu_2861_p2 : sub_ln703_66_fu_2856_p2);

assign select_ln19_96_fu_2873_p3 = ((tmp_98_reg_6266[0:0] === 1'b1) ? WIN_V_2_1 : sub_ln703_6_fu_1576_p2);

assign select_ln19_97_fu_2892_p3 = ((tmp_99_reg_6271[0:0] === 1'b1) ? add_ln703_84_fu_2886_p2 : sub_ln703_67_fu_2880_p2);

assign select_ln19_98_fu_2909_p3 = ((tmp_100_reg_6276[0:0] === 1'b1) ? add_ln703_85_fu_2904_p2 : sub_ln703_68_fu_2899_p2);

assign select_ln19_99_fu_2916_p3 = ((trunc_ln791_11_reg_6281[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_9_fu_1626_p3 = ((trunc_ln791_1_reg_5831[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln19_fu_1483_p3 = ((trunc_ln791_reg_5782[0:0] === 1'b1) ? WIN_V_0_1 : sub_ln703_fu_1477_p2);

assign select_ln75_fu_1055_p3 = ((icmp_ln77_fu_995_p2[0:0] === 1'b1) ? add_ln75_1_fu_1009_p2 : ap_phi_mux_r_0_phi_fu_433_p4);

assign shl_ln_fu_783_p3 = {{trunc_ln731_fu_779_p1}, {8'd0}};

assign sub_ln703_100_fu_3842_p2 = (select_ln19_145_fu_3834_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_105_fu_3887_p2 = (select_ln19_153_fu_3881_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_106_fu_3905_p2 = (select_ln19_154_fu_3897_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_10_fu_1652_p2 = (select_ln19_10_fu_1645_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_111_fu_3950_p2 = (select_ln19_162_fu_3944_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_112_fu_3968_p2 = (select_ln19_163_fu_3960_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_117_fu_4013_p2 = (select_ln19_171_fu_4007_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_118_fu_4031_p2 = (select_ln19_172_fu_4023_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_11_fu_1676_p2 = (select_ln19_12_fu_1669_p3 - WIN_V_1_2);

assign sub_ln703_123_fu_4076_p2 = (select_ln19_180_fu_4070_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_124_fu_4094_p2 = (select_ln19_181_fu_4086_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_129_fu_4139_p2 = (select_ln19_189_fu_4133_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_12_fu_1695_p2 = (select_ln19_13_fu_1688_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_130_fu_4157_p2 = (select_ln19_190_fu_4149_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_135_fu_4202_p2 = (select_ln19_198_fu_4196_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_136_fu_4220_p2 = (select_ln19_199_fu_4212_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_13_fu_1719_p2 = (select_ln19_15_fu_1712_p3 - WIN_V_2_2);

assign sub_ln703_141_fu_4265_p2 = (select_ln19_207_fu_4259_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_142_fu_4283_p2 = (select_ln19_208_fu_4275_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_147_fu_4328_p2 = (select_ln19_216_fu_4322_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_148_fu_4346_p2 = (select_ln19_217_fu_4338_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_14_fu_1738_p2 = (select_ln19_16_fu_1731_p3 - tmp_V_3_reg_5745);

assign sub_ln703_153_fu_4391_p2 = (select_ln19_225_fu_4385_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_154_fu_4409_p2 = (select_ln19_226_fu_4401_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_159_fu_4454_p2 = (select_ln19_234_fu_4448_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_15_fu_1762_p2 = (select_ln19_18_fu_1755_p3 - WIN_V_0_2);

assign sub_ln703_160_fu_4472_p2 = (select_ln19_235_fu_4464_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_165_fu_4517_p2 = (select_ln19_243_fu_4511_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_166_fu_4535_p2 = (select_ln19_244_fu_4527_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_16_fu_1781_p2 = (select_ln19_19_fu_1774_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_171_fu_4580_p2 = (select_ln19_252_fu_4574_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_172_fu_4598_p2 = (select_ln19_253_fu_4590_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_177_fu_4643_p2 = (select_ln19_261_fu_4637_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_178_fu_4661_p2 = (select_ln19_262_fu_4653_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_17_fu_1805_p2 = (select_ln19_21_fu_1798_p3 - WIN_V_1_2);

assign sub_ln703_183_fu_4706_p2 = (select_ln19_270_fu_4700_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_184_fu_4724_p2 = (select_ln19_271_fu_4716_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_189_fu_4774_p2 = (select_ln19_279_fu_4768_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_18_fu_1824_p2 = (select_ln19_22_fu_1817_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_190_fu_4792_p2 = (select_ln19_280_fu_4784_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_19_fu_1848_p2 = (select_ln19_24_fu_1841_p3 - WIN_V_2_2);

assign sub_ln703_1_fu_1490_p2 = (select_ln19_fu_1483_p3 - WIN_V_0_2);

assign sub_ln703_20_fu_1867_p2 = (select_ln19_25_fu_1860_p3 - tmp_V_3_reg_5745);

assign sub_ln703_21_fu_1891_p2 = (select_ln19_27_fu_1884_p3 - WIN_V_0_2);

assign sub_ln703_22_fu_1910_p2 = (select_ln19_28_fu_1903_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_23_fu_1934_p2 = (select_ln19_30_fu_1927_p3 - WIN_V_1_2);

assign sub_ln703_24_fu_1953_p2 = (select_ln19_31_fu_1946_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_25_fu_1977_p2 = (select_ln19_33_fu_1970_p3 - WIN_V_2_2);

assign sub_ln703_26_fu_1996_p2 = (select_ln19_34_fu_1989_p3 - tmp_V_3_reg_5745);

assign sub_ln703_27_fu_2020_p2 = (select_ln19_36_fu_2013_p3 - WIN_V_0_2);

assign sub_ln703_28_fu_2039_p2 = (select_ln19_37_fu_2032_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_29_fu_2063_p2 = (select_ln19_39_fu_2056_p3 - WIN_V_1_2);

assign sub_ln703_2_fu_1509_p2 = (select_ln19_1_fu_1502_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_30_fu_2082_p2 = (select_ln19_40_fu_2075_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_31_fu_2106_p2 = (select_ln19_42_fu_2099_p3 - WIN_V_2_2);

assign sub_ln703_32_fu_2125_p2 = (select_ln19_43_fu_2118_p3 - tmp_V_3_reg_5745);

assign sub_ln703_33_fu_2149_p2 = (select_ln19_45_fu_2142_p3 - WIN_V_0_2);

assign sub_ln703_34_fu_2168_p2 = (select_ln19_46_fu_2161_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_35_fu_2192_p2 = (select_ln19_48_fu_2185_p3 - WIN_V_1_2);

assign sub_ln703_36_fu_2211_p2 = (select_ln19_49_fu_2204_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_37_fu_2235_p2 = (select_ln19_51_fu_2228_p3 - WIN_V_2_2);

assign sub_ln703_38_fu_2254_p2 = (select_ln19_52_fu_2247_p3 - tmp_V_3_reg_5745);

assign sub_ln703_39_fu_2278_p2 = (select_ln19_54_fu_2271_p3 - WIN_V_0_2);

assign sub_ln703_3_fu_1526_p2 = (13'd0 - WIN_V_1_1);

assign sub_ln703_40_fu_2297_p2 = (select_ln19_55_fu_2290_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_41_fu_2321_p2 = (select_ln19_57_fu_2314_p3 - WIN_V_1_2);

assign sub_ln703_42_fu_2340_p2 = (select_ln19_58_fu_2333_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_43_fu_2364_p2 = (select_ln19_60_fu_2357_p3 - WIN_V_2_2);

assign sub_ln703_44_fu_2383_p2 = (select_ln19_61_fu_2376_p3 - tmp_V_3_reg_5745);

assign sub_ln703_45_fu_2407_p2 = (select_ln19_63_fu_2400_p3 - WIN_V_0_2);

assign sub_ln703_46_fu_2426_p2 = (select_ln19_64_fu_2419_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_47_fu_2450_p2 = (select_ln19_66_fu_2443_p3 - WIN_V_1_2);

assign sub_ln703_48_fu_2469_p2 = (select_ln19_67_fu_2462_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_49_fu_2493_p2 = (select_ln19_69_fu_2486_p3 - WIN_V_2_2);

assign sub_ln703_4_fu_1540_p2 = (select_ln19_3_fu_1533_p3 - WIN_V_1_2);

assign sub_ln703_50_fu_2512_p2 = (select_ln19_70_fu_2505_p3 - tmp_V_3_reg_5745);

assign sub_ln703_51_fu_2536_p2 = (select_ln19_72_fu_2529_p3 - WIN_V_0_2);

assign sub_ln703_52_fu_2555_p2 = (select_ln19_73_fu_2548_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_53_fu_2579_p2 = (select_ln19_75_fu_2572_p3 - WIN_V_1_2);

assign sub_ln703_54_fu_2598_p2 = (select_ln19_76_fu_2591_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_55_fu_2622_p2 = (select_ln19_78_fu_2615_p3 - WIN_V_2_2);

assign sub_ln703_56_fu_2641_p2 = (select_ln19_79_fu_2634_p3 - tmp_V_3_reg_5745);

assign sub_ln703_57_fu_2665_p2 = (select_ln19_81_fu_2658_p3 - WIN_V_0_2);

assign sub_ln703_58_fu_2684_p2 = (select_ln19_82_fu_2677_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_59_fu_2708_p2 = (select_ln19_84_fu_2701_p3 - WIN_V_1_2);

assign sub_ln703_5_fu_1559_p2 = (select_ln19_4_fu_1552_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_60_fu_2727_p2 = (select_ln19_85_fu_2720_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_61_fu_2751_p2 = (select_ln19_87_fu_2744_p3 - WIN_V_2_2);

assign sub_ln703_62_fu_2770_p2 = (select_ln19_88_fu_2763_p3 - tmp_V_3_reg_5745);

assign sub_ln703_63_fu_2794_p2 = (select_ln19_90_fu_2787_p3 - WIN_V_0_2);

assign sub_ln703_64_fu_2813_p2 = (select_ln19_91_fu_2806_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_65_fu_2837_p2 = (select_ln19_93_fu_2830_p3 - WIN_V_1_2);

assign sub_ln703_66_fu_2856_p2 = (select_ln19_94_fu_2849_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_67_fu_2880_p2 = (select_ln19_96_fu_2873_p3 - WIN_V_2_2);

assign sub_ln703_68_fu_2899_p2 = (select_ln19_97_fu_2892_p3 - tmp_V_3_reg_5745);

assign sub_ln703_69_fu_2923_p2 = (select_ln19_99_fu_2916_p3 - WIN_V_0_2);

assign sub_ln703_6_fu_1576_p2 = (13'd0 - WIN_V_2_1);

assign sub_ln703_70_fu_2942_p2 = (select_ln19_100_fu_2935_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_71_fu_2966_p2 = (select_ln19_102_fu_2959_p3 - WIN_V_1_2);

assign sub_ln703_72_fu_2985_p2 = (select_ln19_103_fu_2978_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_73_fu_3009_p2 = (select_ln19_105_fu_3002_p3 - WIN_V_2_2);

assign sub_ln703_74_fu_3028_p2 = (select_ln19_106_fu_3021_p3 - tmp_V_3_reg_5745);

assign sub_ln703_75_fu_3052_p2 = (select_ln19_108_fu_3045_p3 - WIN_V_0_2);

assign sub_ln703_76_fu_3071_p2 = (select_ln19_109_fu_3064_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_77_fu_3095_p2 = (select_ln19_111_fu_3088_p3 - WIN_V_1_2);

assign sub_ln703_78_fu_3114_p2 = (select_ln19_112_fu_3107_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_79_fu_3138_p2 = (select_ln19_114_fu_3131_p3 - WIN_V_2_2);

assign sub_ln703_7_fu_1590_p2 = (select_ln19_6_fu_1583_p3 - WIN_V_2_2);

assign sub_ln703_80_fu_3157_p2 = (select_ln19_115_fu_3150_p3 - tmp_V_3_reg_5745);

assign sub_ln703_81_fu_3181_p2 = (select_ln19_117_fu_3174_p3 - WIN_V_0_2);

assign sub_ln703_82_fu_3200_p2 = (select_ln19_118_fu_3193_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_83_fu_3224_p2 = (select_ln19_120_fu_3217_p3 - WIN_V_1_2);

assign sub_ln703_84_fu_3243_p2 = (select_ln19_121_fu_3236_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_85_fu_3267_p2 = (select_ln19_123_fu_3260_p3 - WIN_V_2_2);

assign sub_ln703_86_fu_3286_p2 = (select_ln19_124_fu_3279_p3 - tmp_V_3_reg_5745);

assign sub_ln703_87_fu_3310_p2 = (select_ln19_126_fu_3303_p3 - WIN_V_0_2);

assign sub_ln703_88_fu_3329_p2 = (select_ln19_127_fu_3322_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_89_fu_3353_p2 = (select_ln19_129_fu_3346_p3 - WIN_V_1_2);

assign sub_ln703_8_fu_1609_p2 = (select_ln19_7_fu_1602_p3 - tmp_V_3_reg_5745);

assign sub_ln703_90_fu_3372_p2 = (select_ln19_130_fu_3365_p3 - LB_V_1_load_reg_5708);

assign sub_ln703_91_fu_3396_p2 = (select_ln19_132_fu_3389_p3 - WIN_V_2_2);

assign sub_ln703_92_fu_3415_p2 = (select_ln19_133_fu_3408_p3 - tmp_V_3_reg_5745);

assign sub_ln703_93_fu_3444_p2 = (select_ln19_135_fu_3436_p3 - WIN_V_0_2);

assign sub_ln703_94_fu_3464_p2 = (select_ln19_136_fu_3456_p3 - LB_V_0_load_reg_5639);

assign sub_ln703_99_fu_3824_p2 = (select_ln19_144_fu_3818_p3 - WIN_V_0_2_load_reg_6481);

assign sub_ln703_9_fu_1633_p2 = (select_ln19_9_fu_1626_p3 - WIN_V_0_2);

assign sub_ln703_fu_1477_p2 = (13'd0 - WIN_V_0_1);

always @ (*) begin
    tmp_101_fu_4949_p4 = tmp_92_fu_4936_p4;
    tmp_101_fu_4949_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_10_fu_4946_p1);
end

always @ (*) begin
    tmp_110_fu_4962_p4 = tmp_101_fu_4949_p4;
    tmp_110_fu_4962_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_11_fu_4959_p1);
end

always @ (*) begin
    tmp_119_fu_4975_p4 = tmp_110_fu_4962_p4;
    tmp_119_fu_4975_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_12_fu_4972_p1);
end

always @ (*) begin
    tmp_11_fu_4819_p4 = tmp_V_2_fu_306;
    tmp_11_fu_4819_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_fu_4816_p1);
end

always @ (*) begin
    tmp_128_fu_4988_p4 = tmp_119_fu_4975_p4;
    tmp_128_fu_4988_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_13_fu_4985_p1);
end

always @ (*) begin
    tmp_137_fu_5001_p4 = tmp_128_fu_4988_p4;
    tmp_137_fu_5001_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_14_fu_4998_p1);
end

always @ (*) begin
    tmp_146_fu_5014_p4 = tmp_137_fu_5001_p4;
    tmp_146_fu_5014_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_15_fu_5011_p1);
end

always @ (*) begin
    tmp_155_fu_5027_p4 = tmp_146_fu_5014_p4;
    tmp_155_fu_5027_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_16_fu_5024_p1);
end

always @ (*) begin
    tmp_164_fu_5040_p4 = tmp_155_fu_5027_p4;
    tmp_164_fu_5040_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_17_fu_5037_p1);
end

always @ (*) begin
    tmp_173_fu_5053_p4 = tmp_164_fu_5040_p4;
    tmp_173_fu_5053_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_18_fu_5050_p1);
end

always @ (*) begin
    tmp_182_fu_5066_p4 = tmp_173_fu_5053_p4;
    tmp_182_fu_5066_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_19_fu_5063_p1);
end

always @ (*) begin
    tmp_191_fu_5079_p4 = tmp_182_fu_5066_p4;
    tmp_191_fu_5079_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_20_fu_5076_p1);
end

assign tmp_1_fu_1015_p4 = {{add_ln75_1_fu_1009_p2[5:1]}};

always @ (*) begin
    tmp_200_fu_5092_p4 = tmp_191_fu_5079_p4;
    tmp_200_fu_5092_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_21_fu_5089_p1);
end

always @ (*) begin
    tmp_209_fu_5105_p4 = tmp_200_fu_5092_p4;
    tmp_209_fu_5105_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_22_fu_5102_p1);
end

always @ (*) begin
    tmp_20_fu_4832_p4 = tmp_11_fu_4819_p4;
    tmp_20_fu_4832_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_1_fu_4829_p1);
end

always @ (*) begin
    tmp_218_fu_5118_p4 = tmp_209_fu_5105_p4;
    tmp_218_fu_5118_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_23_fu_5115_p1);
end

always @ (*) begin
    tmp_227_fu_5131_p4 = tmp_218_fu_5118_p4;
    tmp_227_fu_5131_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_24_fu_5128_p1);
end

always @ (*) begin
    tmp_236_fu_5144_p4 = tmp_227_fu_5131_p4;
    tmp_236_fu_5144_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_25_fu_5141_p1);
end

always @ (*) begin
    tmp_245_fu_5157_p4 = tmp_236_fu_5144_p4;
    tmp_245_fu_5157_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_26_fu_5154_p1);
end

always @ (*) begin
    tmp_254_fu_5170_p4 = tmp_245_fu_5157_p4;
    tmp_254_fu_5170_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_27_fu_5167_p1);
end

always @ (*) begin
    tmp_263_fu_5183_p4 = tmp_254_fu_5170_p4;
    tmp_263_fu_5183_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_28_fu_5180_p1);
end

always @ (*) begin
    tmp_272_fu_5196_p4 = tmp_263_fu_5183_p4;
    tmp_272_fu_5196_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_29_fu_5193_p1);
end

always @ (*) begin
    tmp_281_fu_5209_p4 = tmp_272_fu_5196_p4;
    tmp_281_fu_5209_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_30_fu_5206_p1);
end

assign tmp_291_fu_1338_p4 = {{select_ln168_reg_5288[5:1]}};

always @ (*) begin
    tmp_29_fu_4845_p4 = tmp_20_fu_4832_p4;
    tmp_29_fu_4845_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_2_fu_4842_p1);
end

assign tmp_2_fu_1031_p4 = {{ap_phi_mux_r_0_phi_fu_433_p4[5:1]}};

always @ (*) begin
    tmp_38_fu_4858_p4 = tmp_29_fu_4845_p4;
    tmp_38_fu_4858_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_3_fu_4855_p1);
end

always @ (*) begin
    tmp_47_fu_4871_p4 = tmp_38_fu_4858_p4;
    tmp_47_fu_4871_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_4_fu_4868_p1);
end

always @ (*) begin
    tmp_56_fu_4884_p4 = tmp_47_fu_4871_p4;
    tmp_56_fu_4884_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_5_fu_4881_p1);
end

always @ (*) begin
    tmp_65_fu_4897_p4 = tmp_56_fu_4884_p4;
    tmp_65_fu_4897_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_6_fu_4894_p1);
end

always @ (*) begin
    tmp_74_fu_4910_p4 = tmp_65_fu_4897_p4;
    tmp_74_fu_4910_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_7_fu_4907_p1);
end

always @ (*) begin
    tmp_83_fu_4923_p4 = tmp_74_fu_4910_p4;
    tmp_83_fu_4923_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_8_fu_4920_p1);
end

always @ (*) begin
    tmp_92_fu_4936_p4 = tmp_83_fu_4923_p4;
    tmp_92_fu_4936_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_9_fu_4933_p1);
end

assign tmp_V_3_fu_1329_p1 = axi_input_V_V_0_data_out[12:0];

always @ (*) begin
    tmp_V_4_fu_5240_p4 = tmp_281_fu_5209_p4;
    tmp_V_4_fu_5240_p4[zext_ln77_fu_4810_p1] = |(zext_ln816_31_fu_5236_p1);
end

assign trunc_ln1496_fu_1069_p1 = select_ln168_fu_1001_p3[4:0];

assign trunc_ln203_fu_775_p1 = f_0_reg_407[4:0];

assign trunc_ln731_fu_779_p1 = weight_input_V_V_0_data_out[4:0];

assign trunc_ln791_10_fu_1394_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_11_fu_1398_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_12_fu_1402_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_13_fu_1406_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_14_fu_1410_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_15_fu_3432_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_16_fu_3814_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_17_fu_3877_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_18_fu_3940_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_19_fu_4003_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_1_fu_1358_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_20_fu_4066_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_21_fu_4129_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_22_fu_4192_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_23_fu_4255_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_24_fu_4318_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_25_fu_4381_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_26_fu_4444_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_27_fu_4507_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_28_fu_4570_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_29_fu_4633_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_2_fu_1362_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_30_fu_4696_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_31_fu_4764_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_3_fu_1366_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_4_fu_1370_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_5_fu_1374_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_6_fu_1378_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_7_fu_1382_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_8_fu_1386_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_9_fu_1390_p1 = FILTER_WEIGHT_V_q0[0:0];

assign trunc_ln791_fu_1334_p1 = FILTER_WEIGHT_V_q0[0:0];

assign weight_input_V_V_0_ack_in = weight_input_V_V_0_state[1'd1];

assign weight_input_V_V_0_load_A = (weight_input_V_V_0_state_cmp_full & ~weight_input_V_V_0_sel_wr);

assign weight_input_V_V_0_load_B = (weight_input_V_V_0_state_cmp_full & weight_input_V_V_0_sel_wr);

assign weight_input_V_V_0_sel = weight_input_V_V_0_sel_rd;

assign weight_input_V_V_0_state_cmp_full = ((weight_input_V_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign weight_input_V_V_0_vld_in = weight_input_V_V_TVALID;

assign weight_input_V_V_0_vld_out = weight_input_V_V_0_state[1'd0];

assign weight_input_V_V_TREADY = weight_input_V_V_0_state[1'd1];

assign xor_ln1496_10_fu_3707_p2 = (icmp_ln1496_10_fu_3701_p2 ^ 1'd1);

assign xor_ln1496_11_fu_3728_p2 = (icmp_ln1496_11_fu_3722_p2 ^ 1'd1);

assign xor_ln1496_12_fu_3749_p2 = (icmp_ln1496_12_fu_3743_p2 ^ 1'd1);

assign xor_ln1496_13_fu_3770_p2 = (icmp_ln1496_13_fu_3764_p2 ^ 1'd1);

assign xor_ln1496_14_fu_3791_p2 = (icmp_ln1496_14_fu_3785_p2 ^ 1'd1);

assign xor_ln1496_15_fu_3808_p2 = (icmp_ln1496_15_fu_3802_p2 ^ 1'd1);

assign xor_ln1496_16_fu_3871_p2 = (icmp_ln1496_16_fu_3865_p2 ^ 1'd1);

assign xor_ln1496_17_fu_3934_p2 = (icmp_ln1496_17_fu_3928_p2 ^ 1'd1);

assign xor_ln1496_18_fu_3997_p2 = (icmp_ln1496_18_fu_3991_p2 ^ 1'd1);

assign xor_ln1496_19_fu_4060_p2 = (icmp_ln1496_19_fu_4054_p2 ^ 1'd1);

assign xor_ln1496_1_fu_3518_p2 = (icmp_ln1496_1_fu_3512_p2 ^ 1'd1);

assign xor_ln1496_20_fu_4123_p2 = (icmp_ln1496_20_fu_4117_p2 ^ 1'd1);

assign xor_ln1496_21_fu_4186_p2 = (icmp_ln1496_21_fu_4180_p2 ^ 1'd1);

assign xor_ln1496_22_fu_4249_p2 = (icmp_ln1496_22_fu_4243_p2 ^ 1'd1);

assign xor_ln1496_23_fu_4312_p2 = (icmp_ln1496_23_fu_4306_p2 ^ 1'd1);

assign xor_ln1496_24_fu_4375_p2 = (icmp_ln1496_24_fu_4369_p2 ^ 1'd1);

assign xor_ln1496_25_fu_4438_p2 = (icmp_ln1496_25_fu_4432_p2 ^ 1'd1);

assign xor_ln1496_26_fu_4501_p2 = (icmp_ln1496_26_fu_4495_p2 ^ 1'd1);

assign xor_ln1496_27_fu_4564_p2 = (icmp_ln1496_27_fu_4558_p2 ^ 1'd1);

assign xor_ln1496_28_fu_4627_p2 = (icmp_ln1496_28_fu_4621_p2 ^ 1'd1);

assign xor_ln1496_29_fu_4690_p2 = (icmp_ln1496_29_fu_4684_p2 ^ 1'd1);

assign xor_ln1496_2_fu_3539_p2 = (icmp_ln1496_2_fu_3533_p2 ^ 1'd1);

assign xor_ln1496_30_fu_4758_p2 = (icmp_ln1496_30_fu_4752_p2 ^ 1'd1);

assign xor_ln1496_31_fu_5230_p2 = (icmp_ln1496_31_fu_5224_p2 ^ 1'd1);

assign xor_ln1496_3_fu_3560_p2 = (icmp_ln1496_3_fu_3554_p2 ^ 1'd1);

assign xor_ln1496_4_fu_3581_p2 = (icmp_ln1496_4_fu_3575_p2 ^ 1'd1);

assign xor_ln1496_5_fu_3602_p2 = (icmp_ln1496_5_fu_3596_p2 ^ 1'd1);

assign xor_ln1496_6_fu_3623_p2 = (icmp_ln1496_6_fu_3617_p2 ^ 1'd1);

assign xor_ln1496_7_fu_3644_p2 = (icmp_ln1496_7_fu_3638_p2 ^ 1'd1);

assign xor_ln1496_8_fu_3665_p2 = (icmp_ln1496_8_fu_3659_p2 ^ 1'd1);

assign xor_ln1496_9_fu_3686_p2 = (icmp_ln1496_9_fu_3680_p2 ^ 1'd1);

assign xor_ln1496_fu_3497_p2 = (icmp_ln1496_fu_3491_p2 ^ 1'd1);

assign zext_ln141_fu_1063_p1 = select_ln168_fu_1001_p3;

assign zext_ln66_fu_765_p1 = f_0_reg_407;

assign zext_ln77_fu_4810_p1 = select_ln168_reg_5288_pp0_iter1_reg;

assign zext_ln816_10_fu_4946_p1 = xor_ln1496_10_reg_6849;

assign zext_ln816_11_fu_4959_p1 = xor_ln1496_11_reg_6854;

assign zext_ln816_12_fu_4972_p1 = xor_ln1496_12_reg_6859;

assign zext_ln816_13_fu_4985_p1 = xor_ln1496_13_reg_6864;

assign zext_ln816_14_fu_4998_p1 = xor_ln1496_14_reg_6869;

assign zext_ln816_15_fu_5011_p1 = xor_ln1496_15_reg_6874;

assign zext_ln816_16_fu_5024_p1 = xor_ln1496_16_reg_6884;

assign zext_ln816_17_fu_5037_p1 = xor_ln1496_17_reg_6894;

assign zext_ln816_18_fu_5050_p1 = xor_ln1496_18_reg_6904;

assign zext_ln816_19_fu_5063_p1 = xor_ln1496_19_reg_6914;

assign zext_ln816_1_fu_4829_p1 = xor_ln1496_1_reg_6804;

assign zext_ln816_20_fu_5076_p1 = xor_ln1496_20_reg_6924;

assign zext_ln816_21_fu_5089_p1 = xor_ln1496_21_reg_6934;

assign zext_ln816_22_fu_5102_p1 = xor_ln1496_22_reg_6944;

assign zext_ln816_23_fu_5115_p1 = xor_ln1496_23_reg_6954;

assign zext_ln816_24_fu_5128_p1 = xor_ln1496_24_reg_6964;

assign zext_ln816_25_fu_5141_p1 = xor_ln1496_25_reg_6974;

assign zext_ln816_26_fu_5154_p1 = xor_ln1496_26_reg_6984;

assign zext_ln816_27_fu_5167_p1 = xor_ln1496_27_reg_6994;

assign zext_ln816_28_fu_5180_p1 = xor_ln1496_28_reg_7004;

assign zext_ln816_29_fu_5193_p1 = xor_ln1496_29_reg_7014;

assign zext_ln816_2_fu_4842_p1 = xor_ln1496_2_reg_6809;

assign zext_ln816_30_fu_5206_p1 = xor_ln1496_30_reg_7029;

assign zext_ln816_31_fu_5236_p1 = xor_ln1496_31_fu_5230_p2;

assign zext_ln816_3_fu_4855_p1 = xor_ln1496_3_reg_6814;

assign zext_ln816_4_fu_4868_p1 = xor_ln1496_4_reg_6819;

assign zext_ln816_5_fu_4881_p1 = xor_ln1496_5_reg_6824;

assign zext_ln816_6_fu_4894_p1 = xor_ln1496_6_reg_6829;

assign zext_ln816_7_fu_4907_p1 = xor_ln1496_7_reg_6834;

assign zext_ln816_8_fu_4920_p1 = xor_ln1496_8_reg_6839;

assign zext_ln816_9_fu_4933_p1 = xor_ln1496_9_reg_6844;

assign zext_ln816_fu_4816_p1 = xor_ln1496_reg_6799;

always @ (posedge ap_clk) begin
    LIMIT_V_0[7:0] <= 8'b00000000;
    LIMIT_V_1[7:0] <= 8'b00000000;
    LIMIT_V_2[7:0] <= 8'b00000000;
    LIMIT_V_3[7:0] <= 8'b00000000;
    LIMIT_V_4[7:0] <= 8'b00000000;
    LIMIT_V_5[7:0] <= 8'b00000000;
    LIMIT_V_6[7:0] <= 8'b00000000;
    LIMIT_V_7[7:0] <= 8'b00000000;
    LIMIT_V_8[7:0] <= 8'b00000000;
    LIMIT_V_9[7:0] <= 8'b00000000;
    LIMIT_V_10[7:0] <= 8'b00000000;
    LIMIT_V_11[7:0] <= 8'b00000000;
    LIMIT_V_12[7:0] <= 8'b00000000;
    LIMIT_V_13[7:0] <= 8'b00000000;
    LIMIT_V_14[7:0] <= 8'b00000000;
    LIMIT_V_15[7:0] <= 8'b00000000;
    LIMIT_V_16[7:0] <= 8'b00000000;
    LIMIT_V_17[7:0] <= 8'b00000000;
    LIMIT_V_18[7:0] <= 8'b00000000;
    LIMIT_V_19[7:0] <= 8'b00000000;
    LIMIT_V_20[7:0] <= 8'b00000000;
    LIMIT_V_21[7:0] <= 8'b00000000;
    LIMIT_V_22[7:0] <= 8'b00000000;
    LIMIT_V_23[7:0] <= 8'b00000000;
    LIMIT_V_24[7:0] <= 8'b00000000;
    LIMIT_V_25[7:0] <= 8'b00000000;
    LIMIT_V_26[7:0] <= 8'b00000000;
    LIMIT_V_27[7:0] <= 8'b00000000;
    LIMIT_V_28[7:0] <= 8'b00000000;
    LIMIT_V_29[7:0] <= 8'b00000000;
    LIMIT_V_30[7:0] <= 8'b00000000;
    LIMIT_V_31[7:0] <= 8'b00000000;
    UnifiedRetVal_i_reg_451[7:0] <= 8'b00000000;
    UnifiedRetVal_i69_reg_521[7:0] <= 8'b00000000;
    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_451[7:0] <= 8'b00000000;
    ap_phi_reg_pp0_iter0_UnifiedRetVal_i69_reg_521[7:0] <= 8'b00000000;
end

endmodule //integer_convolution
